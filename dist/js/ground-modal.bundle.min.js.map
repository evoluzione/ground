{"version":3,"file":"ground-modal.bundle.min.js","mappings":"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","sources":["webpack://ground/./assets/js/components/modal.js","webpack://ground/./assets/js/utilities/observer.js"],"sourcesContent":["/**\n * Modal module\n * Lightbox library for presenting various types of media\n */\n\nimport { initObserver } from '../utilities/observer';\nimport { PhotoSwipe } from 'photoswipe';\nimport { PhotoSwipeUIDefault } from 'photoswipe/dist/photoswipe-ui-default';\n\nconst Deepmerge = require('deepmerge');\n\nexport default class Modal {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-modal]';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element // '[href$=\".jpg\"], [href$=\".png\"], [href$=\".gif\"], [href$=\".jpeg\"], [href$=\".webp\"]'\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? Deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\t\tthis.openPhotoSwipe = this.openPhotoSwipe.bind(this);\n\t\tthis.clickedItem = this.clickedItem.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t\tthis.DOM.pswpElement = document.querySelectorAll('.pswp')[0];\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tconst elements = document.querySelectorAll(triggers);\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\telements[i].addEventListener('click', this.clickedItem);\n\t\t}\n\t}\n\n\t/**\n\t * Update events\n\t * @param {string} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\ttarget.addEventListener('click', this.clickedItem);\n\t}\n\n\tgetItems(currentTarget) {\n\t\tthis.items = [];\n\t\tlet item;\n\t\tlet size;\n\t\tconst sel = document.querySelectorAll(`[data-modal=\"${event.currentTarget.dataset.modal}\"]`);\n\n\t\tif (event.currentTarget.dataset.modal === '') {\n\t\t\tconst element = event.currentTarget;\n\t\t\tsize = element.getAttribute('data-modal-size').split('x');\n\t\t\titem = {\n\t\t\t\tsrc: element.getAttribute('href'),\n\t\t\t\tw: parseInt(size[0], 10),\n\t\t\t\th: parseInt(size[1], 10),\n\t\t\t\tel: element\n\t\t\t};\n\t\t\tif (element.getElementsByTagName('img')[0] !== undefined) {\n\t\t\t\titem.msrc = element.getElementsByTagName('img')[0].getAttribute('src');\n\t\t\t}\n\t\t\tif (element.getAttribute('data-modal-caption')) {\n\t\t\t\titem.title = element.getAttribute('data-modal-caption');\n\t\t\t}\n\t\t\tthis.items.push(item);\n\t\t} else {\n\t\t\tfor (let index = 0; index < sel.length; index++) {\n\t\t\t\tconst element = sel[index];\n\t\t\t\tsize = element.getAttribute('data-modal-size').split('x');\n\t\t\t\titem = {\n\t\t\t\t\tsrc: element.getAttribute('href'),\n\t\t\t\t\tw: parseInt(size[0], 10),\n\t\t\t\t\th: parseInt(size[1], 10),\n\t\t\t\t\tfirstSlide: currentTarget.isEqualNode(element),\n\t\t\t\t\tel: element\n\t\t\t\t};\n\n\t\t\t\tif (element.getElementsByTagName('img')[0] !== undefined) {\n\t\t\t\t\titem.msrc = element.getElementsByTagName('img')[0].getAttribute('src');\n\t\t\t\t}\n\t\t\t\tif (element.getAttribute('data-modal-caption')) {\n\t\t\t\t\titem.title = element.getAttribute('data-modal-caption');\n\t\t\t\t}\n\t\t\t\tthis.items.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn this.items;\n\t}\n\n\tclickedItem(event) {\n\t\tthis.openPhotoSwipe(event);\n\t}\n\n\topenPhotoSwipe(event) {\n\t\tevent.preventDefault();\n\n\t\tlet index;\n\t\tconst items = this.getItems(event.currentTarget);\n\n\t\tif (items.length > 0) {\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\tconst element = items[i];\n\n\t\t\t\tif (element.firstSlide) {\n\t\t\t\t\tindex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.swiperOptions = {\n\t\t\tindex,\n\t\t\thistory: false,\n\t\t\tshareEl: false,\n\t\t\tgetThumbBoundsFn(index) {\n\t\t\t\tconst thumbnail = items[index].el.getElementsByTagName('img')[0];\n\t\t\t\tconst pageYScroll = window.pageYOffset || document.documentElement.scrollTop;\n\t\t\t\tconst rect = thumbnail.getBoundingClientRect();\n\t\t\t\treturn {\n\t\t\t\t\tx: rect.left,\n\t\t\t\t\ty: rect.top + pageYScroll,\n\t\t\t\t\tw: rect.width\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tthis.gallery = new PhotoSwipe(this.DOM.pswpElement, PhotoSwipeUIDefault, items, this.swiperOptions);\n\t\tthis.gallery.init();\n\t\tthis.onOpen();\n\t\tthis.gallery.listen('close', () => {\n\t\t\tthis.onClose();\n\t\t});\n\t}\n\n\tonOpen() {\n\t\tthis.DOM.html.classList.add('is-modal-open');\n\t}\n\n\tonClose() {\n\t\tthis.DOM.html.classList.remove('is-modal-open');\n\t}\n\n\tdestroy() {\n\t\tthis.gallery.destroy();\n\t}\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["Deepmerge","require","Modal","element","options","this","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","openPhotoSwipe","clickedItem","init","initEvents","initObserver","querySelectorAll","pswpElement","elements","i","length","addEventListener","target","currentTarget","item","size","items","sel","event","dataset","modal","getAttribute","split","src","w","parseInt","h","el","undefined","getElementsByTagName","msrc","title","push","index","firstSlide","isEqualNode","preventDefault","getItems","swiperOptions","history","shareEl","getThumbBoundsFn","thumbnail","pageYScroll","window","pageYOffset","scrollTop","rect","getBoundingClientRect","x","left","y","top","width","gallery","PhotoSwipe","PhotoSwipeUIDefault","onOpen","listen","onClose","classList","add","remove","destroy","callback","MutationObserver","mutationsList","selector","result","Set","addedNodes","node","nodeType","matches","entry","filterSelector","forEach","observe","childList","attributes","characterData","subtree"],"sourceRoot":""}
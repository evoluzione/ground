{"version":3,"file":"ground-checkoutAutocomplete.bundle.min.js","mappings":"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","sources":["webpack://ground/./assets/js/components/checkoutAutocomplete.js","webpack://ground/./node_modules/deepmerge/dist/cjs.js"],"sourcesContent":["import deepmerge from 'deepmerge';\n\nexport default class CheckoutAutocomplete {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || 'form.woocommerce-checkout';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element,\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.init();\n\t}\n\n\tcitiesJson = [];\n\tselectOption = { placeholder: 'Seleziona un\\'opzione...' };\n\n\t// Country - e.g. Italy\n\t// State - e.g. Brescia\n\t// City - e.g. Flero\n\t// Postcode - e.g. 25125\n\tselectCountry = jQuery('#billing_country');\n\tselectState = jQuery('#billing_state');\n\tselectCity = jQuery('#billing_city');\n\tselectPostcode = jQuery('#billing_postcode');\n\n\t/**\n\t * Init\n\t */\n\tasync init() {\n\t\tthis.getJson();\n\t}\n\n\t/**\n\t * Utility function to initialize an array of fields with Select2\n\t * @param {*} fields \n\t */\n\tinitializeSelect2Fields(fields) {\n\t\tfields.forEach(\n\t\t\tfield => field.select2({ ...this.selectOption, disabled: true })\n\t\t);\n\t}\n\n\t/**\n\t * Retreive Json from local file\n\t * @returns \n\t */\n\tgetJson() {\n\n\t\tconst path = document.body.dataset.templateUrl;\n\t\tif (!path) return;\n\n\t\tjQuery.getJSON(`${path}/data/db/Cities-it.json`, function (json) {\n\t\t\treturn json;\n\t\t}).then((json) => {\n\t\t\tthis.citiesJson = json;\n\t\t\tif (json.length > 0) this.initPopulateAutocomplete();\n\t\t}).catch(err => {\n\t\t\tconsole.error('[checkoutAutocomplete] getJson failed ', err);\n\t\t});\n\n\t}\n\n\tinitPopulateAutocomplete() {\n\n\t\tif (this.selectCountry.val() === 'IT') this.populateAutocompleteItaly();\n\n\t\t// Callback if country is selected\n\t\tconst cbCountrySelected = (e) => {\n\t\t\tconst data = e.params.data;\n\n\t\t\t// Svuoto i valori inseriti in precedenza\n\t\t\tthis.selectState.val(null);\n\t\t\tthis.selectCity.val(null);\n\t\t\tthis.selectPostcode.val(null);\n\n\t\t\tif (data.id !== 'IT') {\n\n\t\t\t\t[this.selectCity, this.selectPostcode].forEach(field => {\n\t\t\t\t\t// Se sono stati inizializzati con select2\n\t\t\t\t\tif (field.hasClass('select2-hidden-accessible')) {\n\t\t\t\t\t\t// li distruggo\n\t\t\t\t\t\tfield.select2('destroy');\n\t\t\t\t\t\t// e li rendo non disabled\n\t\t\t\t\t\tfield.prop('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Re-initialize field because on change state AJAX inject new items\n\t\t\tthis.selectCountry = jQuery('#billing_country');\n\t\t\tthis.selectState = jQuery('#billing_state');\n\t\t\tthis.selectCity = jQuery('#billing_city');\n\t\t\tthis.selectPostcode = jQuery('#billing_postcode');\n\n\t\t\tthis.populateAutocompleteItaly();\n\t\t};\n\t\tthis.selectCountry.on('select2:select', cbCountrySelected);\n\t}\n\n\tpopulateAutocompleteItaly() {\n\n\t\t// initialize select2 fields\n\t\tthis.initializeSelect2Fields([this.selectCity, this.selectPostcode]);\n\n\t\t/**\n\t\t * City\n\t\t */\n\t\tthis.populateAutocompleteCity(this.selectState.val());\n\t\t// Callback if state is selected\n\t\tconst cbStateSelected = (e) => {\n\t\t\tconst data = e.params.data;\n\t\t\t// Svuoto city e postcode\n\t\t\tthis.initializeSelect2Fields([this.selectCity, this.selectPostcode]);\n\t\t\t// Aggiorno i valori di city\n\t\t\tif (data.id) this.populateAutocompleteCity(data.id);\n\n\t\t};\n\t\tthis.selectState.on('select2:select', cbStateSelected);\n\n\t\t/**\n\t\t * Postcode\n\t\t */\n\t\tthis.populateAutocompletePostcode(this.selectCity.val());\n\t\t// Callback if city is selected\n\t\tconst cbCitySelected = (e) => {\n\t\t\tconst data = e.params.data;\n\t\t\t// Svuoto il postcode\n\t\t\tthis.initializeSelect2Fields([this.selectPostcode]);\n\t\t\t// aggiorno i valori di postcode\n\t\t\tif (data.id) this.populateAutocompletePostcode(data.id);\n\t\t};\n\t\tthis.selectCity.on('select2:select', cbCitySelected);\n\n\t}\n\n\tpopulateAutocompleteCity(value) {\n\n\t\tconst filteredList = this.citiesJson\n\t\t\t.filter(item => item.ProvinceCode === value)\n\t\t\t.map(item => ({ id: item.Title, text: item.Title }));\n\n\t\tif (!filteredList.length) return;\n\n\t\tthis.selectCity.select2({\n\t\t\t...this.selectOption,\n\t\t\tdisabled: false,\n\t\t\tdata: filteredList\n\t\t});\n\t}\n\n\tpopulateAutocompletePostcode(value) {\n\n\t\tconst filteredItem = this.citiesJson\n\t\t\t.find(item => item.Title === value);\n\n\t\tif (!filteredItem) return;\n\n\t\tconst filteredList = filteredItem.ZipCodes\n\t\t\t.map(item => ({ id: item, text: item }));\n\n\t\tif (!filteredList.length) return;\n\n\t\tthis.selectPostcode.select2({\n\t\t\t...this.selectOption,\n\t\t\tdisabled: false,\n\t\t\tdata: filteredList\n\t\t});\n\t}\n\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"],"names":["CheckoutAutocomplete","constructor","element","options","placeholder","jQuery","this","defaults","triggers","deepmerge","init","getJson","initializeSelect2Fields","fields","forEach","field","select2","selectOption","disabled","path","document","body","dataset","templateUrl","getJSON","json","then","citiesJson","length","initPopulateAutocomplete","catch","err","console","error","selectCountry","val","populateAutocompleteItaly","on","e","data","params","selectState","selectCity","selectPostcode","id","hasClass","prop","populateAutocompleteCity","populateAutocompletePostcode","value","filteredList","filter","item","ProvinceCode","map","Title","text","filteredItem","find","ZipCodes","isMergeableObject","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","clone","Array","isArray","defaultArrayMerge","target","source","concat","getKeys","keys","getOwnPropertySymbols","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","arrayMerge","sourceIsArray","destination","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","reduce","prev","next","deepmerge_1","module","exports"],"sourceRoot":""}
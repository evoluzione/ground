{"version":3,"file":"animationHorizontalScrollContainer.bundle.js","mappings":"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","sources":["webpack://ground/./js/animations/animationHorizontalScrollContainer.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport deepmerge from 'deepmerge';\nimport { initObserver } from '../utilities/observer';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationHorizontalScrollContainer {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-scroll=\"js-horizontal-scroll-container\"]';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('LOADER_COMPLETE', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tgsap.utils.toArray(triggers).forEach((element) => {\n\t\t\tthis.animationHorizontalScrollContainer(element);\n\t\t});\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\n\t\tsetTimeout(() => {\n\t\t\tthis.animationHorizontalScrollContainer(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * pin Horizontal Container Animation\n\t */\n\tanimationHorizontalScrollContainer(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst panel = item.querySelectorAll('[data-scroll-panel]');\n\t\tconst targetScrub = item.dataset.scrollScrub;\n\n\t\tconsole.log(targetScrub);\n\n\t\tlet sections = gsap.utils.toArray(panel);\n\n\t\tlet scrollTween = gsap.to(sections, {\n\t\t\txPercent: -100 * (sections.length - 1),\n\t\t\tease: 'none', // <-- IMPORTANT!\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tpin: true,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\t//snap: directionalSnap(1 / (sections.length - 1)),\n\t\t\t\tend: '+=3000'\n\t\t\t}\n\t\t});\n\n\t\tgsap.to('.js-box-1', {\n\t\t\ty: -130,\n\t\t\tduration: 2,\n\t\t\tease: 'elastic',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: '.js-box-1',\n\t\t\t\tcontainerAnimation: scrollTween,\n\t\t\t\tstart: 'left center',\n\t\t\t\ttoggleActions: 'play none play reverse'\n\t\t\t\t// markers: true,\n\t\t\t}\n\t\t});\n\n\t\tgsap.to('.js-box-2', {\n\t\t\ty: 320,\n\t\t\tbackgroundColor: 'red',\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: '.js-box-2',\n\t\t\t\tcontainerAnimation: scrollTween,\n\t\t\t\tstart: 'center 80%',\n\t\t\t\tend: 'center 20%',\n\t\t\t\tscrub: 2\n\t\t\t\t// markers: true\n\t\t\t}\n\t\t});\n\t}\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["deepmerge","initObserver","gsap","ScrollTrigger","registerPlugin","AnimationHorizontalScrollContainer","element","options","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","init","initEvents","querySelectorAll","utils","toArray","forEach","animationHorizontalScrollContainer","target","setTimeout","item","querySelector","panel","targetScrub","dataset","scrollScrub","console","log","sections","scrollTween","to","xPercent","length","ease","scrollTrigger","trigger","pin","scrub","end","y","duration","containerAnimation","start","toggleActions","backgroundColor","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","entry","observerCallback","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
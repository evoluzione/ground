{"version":3,"file":"animationHorizontalScrollSection.bundle.js","mappings":"sWAOAA,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAECC,EAAAA,WAKpB,WAAYC,EAASC,I,4FAAS,SAC7BC,KAAKF,QAAUA,EACfE,KAAKC,SAAW,CACfC,SAAUF,KAAKF,SAEhBE,KAAKG,IAAM,CACVC,KAAMC,SAASC,gBACfC,KAAMF,SAASE,MAEhBP,KAAKD,QAAUA,EAAUS,GAAAA,CAAUR,KAAKC,SAAUF,GAAWC,KAAKC,SA4BlED,KAAKS,OACLT,KAAKU,WAAWV,KAAKD,QAAQG,U,yCAQ9B,WACCF,KAAKG,IAAIL,QAAUE,KAAKF,U,wBAOzB,SAAWI,GACVF,KAAKW,cAAcT,K,0BAcpB,SAAaU,GAAQ,WACpBZ,KAAKS,OACLI,YAAW,WACV,EAAKF,cAAcC,KACjB,O,2BAOJ,SAAcE,GAEb,IAAMC,EAAcD,EAAKE,QAAQC,OAEjCrB,EAAAA,EAAAA,OAAqB,CACpBsB,QAASJ,EACTK,MAAO,WACPC,YAAaL,EACbM,cAAe,6B,sEA7FGxB,I,o/BCJrBF,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAEC0B,EAAAA,SAAAA,I,urBAGpB,WAAYxB,EAASC,GAAS,a,4FAAA,UAC7B,cAAMD,EAASC,IACVD,QAAUA,GAAW,+CAFG,E,0CAK9B,SAAcgB,GACb,IAAMF,EAASE,EAAKS,cAAc,wBAC5BC,EAAUV,EAAKW,iBAAiB,yBAChCC,EAAcC,SAASb,EAAKE,QAAQY,YAAa,IAEjDC,EAAWlC,EAAAA,GAAAA,MAAAA,QAAmB6B,GAEhCM,EAAW,EAETC,EAAc,WACnBD,EAAW,EACXD,EAASG,SAAQ,SAACR,GACjBM,GAAYN,EAAQS,gBAGtBF,IACAnC,EAAAA,EAAAA,iBAA+B,cAAemC,GAE9CpC,EAAAA,GAAAA,GAAQkC,EAAU,CACjBK,EAAG,4BAAUJ,EAAWK,OAAOC,aAC/BC,KAAM,OACNC,cAAe,CACdpB,QAASN,EACT2B,KAAK,EACLC,aAAa,EACbC,MAAOf,IAAe,EACtBP,MAAO,gBACPuB,IAAK,6BAAWZ,IAChBa,qBAAqB,KAUvBd,EAASG,SAAQ,SAACY,EAAKC,GACtBjD,EAAAA,EAAAA,OAAqB,CACpBsB,QAAS0B,EACTzB,MAAO,iBACN,aACCyB,EAAIE,WAAaX,OAAOC,WAAa,IAAMN,GAAYA,EAAWK,OAAOC,cAC3EM,IAAK,iBAAM,KAAOE,EAAIX,aAAeH,GAAYA,EAAWK,OAAOC,cACnEhB,YAAa,CAAE2B,QAASH,EAAKI,UAAW,oB,sEArDvB1B,CAAyCzB,EAAAA","sources":["webpack://ground/./js/animations/animationDefault.js","webpack://ground/./js/animations/animationHorizontalScrollSection.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// import { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationDefault {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element;\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\t// this.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refresh', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_OUT', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('resize', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('NAVIGATE_IN', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_END', () => {});\n\n\t\t//  window.addEventListener('LOADER_COMPLETE', () => {\n\t\tthis.init();\n\t\tthis.initEvents(this.options.triggers);\n\t\t// initObserver(this.options.triggers, this.updateEvents);\n\t\t//  });\t\t\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = this.element;\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tthis.fireAnimation(triggers);\n\n\t\t// gsap.utils.toArray(triggers).forEach((element) => {\n\t\t// \tif (element.dataset.scroll === 'js-split-text') {\n\t\t// \t}  else {\n\t\t// \t\tthis.animationDefault(target);\n\t\t// \t}\n\t\t// });\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\tsetTimeout(() => {\n\t\t\tthis.fireAnimation(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Fire the animation\n\t * @param {node} item \n\t */\n\tfireAnimation(item) {\n\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n}\n","/* eslint-disable no-unused-vars */\nimport AnimationDefault from './animationDefault';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationHorizontalScrollSection extends AnimationDefault {\n\t\n\n\tconstructor(element, options) {\n\t\tsuper(element, options);\n\t\tthis.element = element || '[data-scroll=\"js-horizontal-scroll-section\"]';\n\t}\n\n\tfireAnimation(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst section = item.querySelectorAll('[data-scroll-section]');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst sections = gsap.utils.toArray(section);\n\n\t\tlet maxWidth = 0;\n\n\t\tconst getMaxWidth = () => {\n\t\t\tmaxWidth = 0;\n\t\t\tsections.forEach((section) => {\n\t\t\t\tmaxWidth += section.offsetWidth;\n\t\t\t});\n\t\t};\n\t\tgetMaxWidth();\n\t\tScrollTrigger.addEventListener('refreshInit', getMaxWidth);\n\n\t\tgsap.to(sections, {\n\t\t\tx: () => `-${maxWidth - window.innerWidth}`,\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tpin: true,\n\t\t\t\tpinReparent: true,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${maxWidth}`,\n\t\t\t\tinvalidateOnRefresh: true\n\t\t\t}\n\t\t});\n\n\t\t// ADD SKEW\n\t\t// let proxy = { skew: 0 },\n\t\t// \tskewSetter = gsap.quickSetter(section, 'skewX', 'deg'), // fast\n\t\t// \tclamp = gsap.utils.clamp(-10, 10) // don't let the skew go beyond [X] degrees.\n\t\t// END SKEW\n\n\t\tsections.forEach((sct, i) => {\n\t\t\tScrollTrigger.create({\n\t\t\t\ttrigger: sct,\n\t\t\t\tstart: () =>\n\t\t\t\t\t'top top-=' +\n\t\t\t\t\t(sct.offsetLeft - window.innerWidth / 2) * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\tend: () => '+=' + sct.offsetWidth * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\ttoggleClass: { targets: sct, className: 'active' }\n\t\t\t\t// ADD SKEW\n\t\t\t\t// onUpdate: (self) => {\n\t\t\t\t// \tlet skew = clamp(self.getVelocity() / -500)\n\t\t\t\t// \t// only do something if the skew is MORE severe. Remember, we're always tweening back to 0, so if the user slows their scrolling quickly, it's more natural to just let the tween handle that smoothly rather than jumping to the smaller skew.\n\t\t\t\t// \tif (Math.abs(skew) > Math.abs(proxy.skew)) {\n\t\t\t\t// \t\tproxy.skew = skew\n\t\t\t\t// \t\tgsap.to(proxy, {\n\t\t\t\t// \t\t\tskew: 0,\n\t\t\t\t// \t\t\tduration: 0.5,\n\t\t\t\t// \t\t\tease: 'circ',\n\t\t\t\t// \t\t\toverwrite: true,\n\t\t\t\t// \t\t\tonUpdate: () => skewSetter(proxy.skew),\n\t\t\t\t// \t\t})\n\t\t\t\t// \t}\n\t\t\t\t// },\n\t\t\t\t// END SKEW\n\t\t\t});\n\t\t});\n\n\t\t// SKEW: make the right edge \"stick\" to the scroll bar. force3D: true improves performance\n\t\t// gsap.set(section, { transformOrigin: 'center center', force3D: true })\n\t\t// END SKEW\n\t}\n}\n"],"names":["gsap","ScrollTrigger","AnimationDefault","element","options","this","defaults","triggers","DOM","html","document","documentElement","body","deepmerge","init","initEvents","fireAnimation","target","setTimeout","item","targetClass","dataset","scroll","trigger","start","toggleClass","toggleActions","AnimationHorizontalScrollSection","querySelector","section","querySelectorAll","targetScrub","parseInt","scrollScrub","sections","maxWidth","getMaxWidth","forEach","offsetWidth","x","window","innerWidth","ease","scrollTrigger","pin","pinReparent","scrub","end","invalidateOnRefresh","sct","i","offsetLeft","targets","className"],"sourceRoot":""}
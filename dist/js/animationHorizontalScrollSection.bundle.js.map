{"version":3,"file":"animationHorizontalScrollSection.bundle.js","mappings":"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","sources":["webpack://ground/./js/animations/animationHorizontalScrollSection.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { initObserver } from '../utilities/observer';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationHorizontalScrollSection {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-scroll=\"js-horizontal-scroll-section\"]';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\twindow.addEventListener('DOMContentLoaded', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\tScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\tScrollTrigger.addEventListener('refresh', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_OUT', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('NAVIGATE_IN', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_END', () => {});\n\n\t\t// window.addEventListener('LOADER_COMPLETE', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\t// TODO: js pin non funziona\n\t\tgsap.utils.toArray(triggers).forEach((element) => {\n\t\t\tthis.animationHorizontalScrollSection(element);\n\t\t});\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\n\t\tsetTimeout(() => {\n\t\t\tthis.animationHorizontalScrollSection(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * pin Horizontal Section Animation\n\t */\n\tanimationHorizontalScrollSection(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst section = item.querySelectorAll('[data-scroll-section]');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst sections = gsap.utils.toArray(section);\n\n\t\tlet maxWidth = 0;\n\n\t\tconst getMaxWidth = () => {\n\t\t\tmaxWidth = 0;\n\t\t\tsections.forEach((section) => {\n\t\t\t\tmaxWidth += section.offsetWidth;\n\t\t\t});\n\t\t};\n\t\tgetMaxWidth();\n\t\tScrollTrigger.addEventListener('refreshInit', getMaxWidth);\n\n\t\tgsap.to(sections, {\n\t\t\tx: () => `-${maxWidth - window.innerWidth}`,\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tpin: true,\n\t\t\t\tpinReparent: true,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${maxWidth}`,\n\t\t\t\tinvalidateOnRefresh: true\n\t\t\t}\n\t\t});\n\n\t\t// ADD SKEW\n\t\t// let proxy = { skew: 0 },\n\t\t// \tskewSetter = gsap.quickSetter(section, 'skewX', 'deg'), // fast\n\t\t// \tclamp = gsap.utils.clamp(-10, 10) // don't let the skew go beyond [X] degrees.\n\t\t// END SKEW\n\n\t\tsections.forEach((sct, i) => {\n\t\t\tScrollTrigger.create({\n\t\t\t\ttrigger: sct,\n\t\t\t\tstart: () =>\n\t\t\t\t\t'top top-=' +\n\t\t\t\t\t(sct.offsetLeft - window.innerWidth / 2) * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\tend: () => '+=' + sct.offsetWidth * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\ttoggleClass: { targets: sct, className: 'active' }\n\t\t\t\t// ADD SKEW\n\t\t\t\t// onUpdate: (self) => {\n\t\t\t\t// \tlet skew = clamp(self.getVelocity() / -500)\n\t\t\t\t// \t// only do something if the skew is MORE severe. Remember, we're always tweening back to 0, so if the user slows their scrolling quickly, it's more natural to just let the tween handle that smoothly rather than jumping to the smaller skew.\n\t\t\t\t// \tif (Math.abs(skew) > Math.abs(proxy.skew)) {\n\t\t\t\t// \t\tproxy.skew = skew\n\t\t\t\t// \t\tgsap.to(proxy, {\n\t\t\t\t// \t\t\tskew: 0,\n\t\t\t\t// \t\t\tduration: 0.5,\n\t\t\t\t// \t\t\tease: 'circ',\n\t\t\t\t// \t\t\toverwrite: true,\n\t\t\t\t// \t\t\tonUpdate: () => skewSetter(proxy.skew),\n\t\t\t\t// \t\t})\n\t\t\t\t// \t}\n\t\t\t\t// },\n\t\t\t\t// END SKEW\n\t\t\t});\n\t\t});\n\n\t\t// SKEW: make the right edge \"stick\" to the scroll bar. force3D: true improves performance\n\t\t// gsap.set(section, { transformOrigin: 'center center', force3D: true })\n\t\t// END SKEW\n\t}\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["initObserver","deepmerge","gsap","ScrollTrigger","registerPlugin","AnimationHorizontalScrollSection","element","options","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","window","addEventListener","init","initEvents","querySelectorAll","utils","toArray","forEach","animationHorizontalScrollSection","target","setTimeout","item","querySelector","section","targetScrub","parseInt","dataset","scrollScrub","sections","maxWidth","getMaxWidth","offsetWidth","to","x","innerWidth","ease","scrollTrigger","trigger","pin","pinReparent","scrub","start","end","invalidateOnRefresh","sct","i","create","offsetLeft","toggleClass","targets","className","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","entry","observerCallback","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
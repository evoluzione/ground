{"version":3,"file":"ground-animationHorizontalScrollContainer.bundle.js","mappings":"sWAOAA,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAECC,EAAAA,WAKpB,WAAYC,EAASC,I,4FAAS,SAC7BC,KAAKF,QAAUA,EACfE,KAAKC,SAAW,CACfC,SAAUF,KAAKF,SAEhBE,KAAKG,IAAM,CACVC,KAAMC,SAASC,gBACfC,KAAMF,SAASE,MAEhBP,KAAKD,QAAUA,EAAUS,GAAAA,CAAUR,KAAKC,SAAUF,GAAWC,KAAKC,SA4BlED,KAAKS,OACLT,KAAKU,WAAWV,KAAKD,QAAQG,U,yCAQ9B,WACCF,KAAKG,IAAIL,QAAUE,KAAKF,U,wBAOzB,SAAWI,GACVF,KAAKW,cAAcT,K,0BAcpB,SAAaU,GAAQ,WACpBZ,KAAKS,OACLI,YAAW,WACV,EAAKF,cAAcC,KACjB,O,2BAOJ,SAAcE,GAEb,IAAMC,EAAcD,EAAKE,QAAQC,OAEjCrB,EAAAA,EAAAA,OAAqB,CACpBsB,QAASJ,EACTK,MAAO,WACPC,YAAaL,EACbM,cAAe,6B,sEA7FGxB,I,m/BCJrBF,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAEC0B,EAAAA,SAAAA,I,urBAEpB,WAAYxB,EAASC,GAAS,a,4FAAA,UAC7B,cAAMD,EAASC,IACVD,QAAUA,GAAW,iDAFG,E,0CAK9B,SAAcgB,GACb,IAAMF,EAASE,EAAKS,cAAc,wBAC5BC,EAAQV,EAAKW,iBAAiB,uBAC9BC,EAAcZ,EAAKE,QAAQW,YAI7BC,EAAWjC,EAAAA,GAAAA,MAAAA,QAAmB6B,GAE9BK,EAAclC,EAAAA,GAAAA,GAAQiC,EAAU,CACnCE,UAAW,KAAOF,EAASG,OAAS,GACpCC,KAAM,OACNC,cAAe,CACdf,QAASN,EACTsB,KAAK,EACLC,MAAOT,IAAe,EAEtBU,IAAK,YAIPzC,EAAAA,GAAAA,GAAQ,YAAa,CACpB0C,GAAI,IACJC,SAAU,EACVN,KAAM,UACNC,cAAe,CACdf,QAAS,YACTqB,mBAAoBV,EACpBV,MAAO,cACPE,cAAe,4BAKjB1B,EAAAA,GAAAA,GAAQ,YAAa,CACpB0C,EAAG,IACHG,gBAAiB,MACjBR,KAAM,OACNC,cAAe,CACdf,QAAS,YACTqB,mBAAoBV,EACpBV,MAAO,aACPiB,IAAK,aACLD,MAAO,U,sEAlDUb,CAA2CzB,EAAAA,U,iBCLhE,IAAI4C,EAAoB,SAA2BC,GAClD,OAID,SAAyBA,GACxB,QAASA,GAA0B,iBAAVA,EALlBC,CAAgBD,KAQxB,SAAmBA,GAClB,IAAIE,EAAcC,OAAOC,UAAUC,SAASC,KAAKN,GAEjD,MAAuB,oBAAhBE,GACa,kBAAhBA,GAQL,SAAwBF,GACvB,OAAOA,EAAMO,WAAaC,EARtBC,CAAeT,GAZdU,CAAUV,IAiBZQ,EADiC,mBAAXG,QAAyBA,OAAOC,IAClBD,OAAOC,IAAI,iBAAmB,MAUtE,SAASC,EAA8Bb,EAAO3C,GAC7C,OAA0B,IAAlBA,EAAQyD,OAAmBzD,EAAQ0C,kBAAkBC,GAC1DlC,GANiBiD,EAMKf,EALlBgB,MAAMC,QAAQF,GAAO,GAAK,IAKAf,EAAO3C,GACrC2C,EAPJ,IAAqBe,EAUrB,SAASG,EAAkBhD,EAAQiD,EAAQ9D,GAC1C,OAAOa,EAAOkD,OAAOD,GAAQE,KAAI,SAASjE,GACzC,OAAOyD,EAA8BzD,EAASC,MAoBhD,SAASiE,EAAQpD,GAChB,OAAOiC,OAAOoB,KAAKrD,GAAQkD,OAT5B,SAAyClD,GACxC,OAAOiC,OAAOqB,sBACXrB,OAAOqB,sBAAsBtD,GAAQuD,QAAO,SAASC,GACtD,OAAOxD,EAAOyD,qBAAqBD,MAElC,GAI+BE,CAAgC1D,IAGnE,SAAS2D,EAAmBC,EAAQC,GACnC,IACC,OAAOA,KAAYD,EAClB,MAAME,GACP,OAAO,GAgCT,SAASlE,EAAUI,EAAQiD,EAAQ9D,IAClCA,EAAUA,GAAW,IACb4E,WAAa5E,EAAQ4E,YAAcf,EAC3C7D,EAAQ0C,kBAAoB1C,EAAQ0C,mBAAqBA,EAGzD1C,EAAQwD,8BAAgCA,EAExC,IAAIqB,EAAgBlB,MAAMC,QAAQE,GAIlC,OAFgCe,IADZlB,MAAMC,QAAQ/C,GAKvBgE,EACH7E,EAAQ4E,WAAW/D,EAAQiD,EAAQ9D,GApC5C,SAAqBa,EAAQiD,EAAQ9D,GACpC,IAAI8E,EAAc,GAiBlB,OAhBI9E,EAAQ0C,kBAAkB7B,IAC7BoD,EAAQpD,GAAQkE,SAAQ,SAASC,GAChCF,EAAYE,GAAOxB,EAA8B3C,EAAOmE,GAAMhF,MAGhEiE,EAAQH,GAAQiB,SAAQ,SAASC,IAblC,SAA0BnE,EAAQmE,GACjC,OAAOR,EAAmB3D,EAAQmE,MAC5BlC,OAAOmC,eAAehC,KAAKpC,EAAQmE,IACpClC,OAAOwB,qBAAqBrB,KAAKpC,EAAQmE,KAWzCE,CAAiBrE,EAAQmE,KAIzBR,EAAmB3D,EAAQmE,IAAQhF,EAAQ0C,kBAAkBoB,EAAOkB,IACvEF,EAAYE,GAhDf,SAA0BA,EAAKhF,GAC9B,IAAKA,EAAQmF,YACZ,OAAO1E,EAER,IAAI0E,EAAcnF,EAAQmF,YAAYH,GACtC,MAA8B,mBAAhBG,EAA6BA,EAAc1E,EA2CpC2E,CAAiBJ,EAAKhF,EAAtBoF,CAA+BvE,EAAOmE,GAAMlB,EAAOkB,GAAMhF,GAE5E8E,EAAYE,GAAOxB,EAA8BM,EAAOkB,GAAMhF,OAGzD8E,EAoBCO,CAAYxE,EAAQiD,EAAQ9D,GAJ5BwD,EAA8BM,EAAQ9D,GAQ/CS,EAAU6E,IAAM,SAAsBC,EAAOvF,GAC5C,IAAK2D,MAAMC,QAAQ2B,GAClB,MAAM,IAAIC,MAAM,qCAGjB,OAAOD,EAAME,QAAO,SAASC,EAAMC,GAClC,OAAOlF,EAAUiF,EAAMC,EAAM3F,KAC3B,KAGJ,IAAI4F,EAAcnF,EAElBoF,EAAOC,QAAUF","sources":["webpack://ground/./js/animations/animationDefault.js","webpack://ground/./js/animations/animationHorizontalScrollContainer.js","webpack://ground/./node_modules/deepmerge/dist/cjs.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// import { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationDefault {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element;\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\t// this.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refresh', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_OUT', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('resize', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('NAVIGATE_IN', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_END', () => {});\n\n\t\t//  window.addEventListener('LOADER_COMPLETE', () => {\n\t\tthis.init();\n\t\tthis.initEvents(this.options.triggers);\n\t\t// initObserver(this.options.triggers, this.updateEvents);\n\t\t//  });\t\t\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = this.element;\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tthis.fireAnimation(triggers);\n\n\t\t// gsap.utils.toArray(triggers).forEach((element) => {\n\t\t// \tif (element.dataset.scroll === 'js-split-text') {\n\t\t// \t}  else {\n\t\t// \t\tthis.animationDefault(target);\n\t\t// \t}\n\t\t// });\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\tsetTimeout(() => {\n\t\t\tthis.fireAnimation(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Fire the animation\n\t * @param {node} item \n\t */\n\tfireAnimation(item) {\n\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n}\n","/* eslint-disable no-unused-vars */\nimport AnimationDefault from './animationDefault';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationHorizontalScrollContainer extends AnimationDefault {\n\t\n\tconstructor(element, options) {\n\t\tsuper(element, options);\n\t\tthis.element = element || '[data-scroll=\"js-horizontal-scroll-container\"]';\n\t}\n\n\tfireAnimation(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst panel = item.querySelectorAll('[data-scroll-panel]');\n\t\tconst targetScrub = item.dataset.scrollScrub;\n\n\t\t// console.log(targetScrub);\n\n\t\tlet sections = gsap.utils.toArray(panel);\n\n\t\tlet scrollTween = gsap.to(sections, {\n\t\t\txPercent: -100 * (sections.length - 1),\n\t\t\tease: 'none', // <-- IMPORTANT!\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tpin: true,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\t//snap: directionalSnap(1 / (sections.length - 1)),\n\t\t\t\tend: '+=3000'\n\t\t\t}\n\t\t});\n\n\t\tgsap.to('.js-box-1', {\n\t\t\ty: -130,\n\t\t\tduration: 2,\n\t\t\tease: 'elastic',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: '.js-box-1',\n\t\t\t\tcontainerAnimation: scrollTween,\n\t\t\t\tstart: 'left center',\n\t\t\t\ttoggleActions: 'play none play reverse'\n\t\t\t\t// markers: true,\n\t\t\t}\n\t\t});\n\n\t\tgsap.to('.js-box-2', {\n\t\t\ty: 320,\n\t\t\tbackgroundColor: 'red',\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: '.js-box-2',\n\t\t\t\tcontainerAnimation: scrollTween,\n\t\t\t\tstart: 'center 80%',\n\t\t\t\tend: 'center 20%',\n\t\t\t\tscrub: 2\n\t\t\t\t// markers: true\n\t\t\t}\n\t\t});\n\t}\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"],"names":["gsap","ScrollTrigger","AnimationDefault","element","options","this","defaults","triggers","DOM","html","document","documentElement","body","deepmerge","init","initEvents","fireAnimation","target","setTimeout","item","targetClass","dataset","scroll","trigger","start","toggleClass","toggleActions","AnimationHorizontalScrollContainer","querySelector","panel","querySelectorAll","targetScrub","scrollScrub","sections","scrollTween","xPercent","length","ease","scrollTrigger","pin","scrub","end","y","duration","containerAnimation","backgroundColor","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","clone","val","Array","isArray","defaultArrayMerge","source","concat","map","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","arrayMerge","sourceIsArray","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","reduce","prev","next","deepmerge_1","module","exports"],"sourceRoot":""}
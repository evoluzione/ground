{"version":3,"file":"ground-toggle.bundle.min.js","mappings":"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","sources":["webpack://ground/./assets/js/components/toggle.js","webpack://ground/./node_modules/deepmerge/dist/cjs.js"],"sourcesContent":["/**\n * Toggle module\n */\n// import { initObserver } from '../utilities/observer';\nconst Deepmerge = require('deepmerge');\n\nexport default class Toggle {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '.js-toggle';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element,\n\t\t\ttoggleClassName: 'is-active'\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? Deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\t\tthis.toggle = this.toggle.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {\n\t\tthis.init();\n\t\tthis.initEvents(this.options.triggers);\n\t\t// initObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tconst elements = document.querySelectorAll(triggers);\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\telements[i].addEventListener('click', this.toggle);\n\t\t}\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\ttarget.addEventListener('click', this.toggle);\n\t}\n\n\t/**\n\t * Toggle classes\n\t * @param {Object} event\n\t */\n\ttoggle(event) {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\n\t\tif (this.DOM.element.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst current = event.currentTarget;\n\t\tif (current) {\n\t\t\t// Add data-toggle-prevent-default=\"false\" to restore default behaviour\n\t\t\tif (!current.hasAttribute('data-toggle-prevent-default')) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\t// Add data-toggle-class-name=\"customclass\" to change the default class name\n\t\t\tif (current.hasAttribute('data-toggle-class-name')) {\n\t\t\t\tthis.options.toggleClassName = current.dataset.toggleClassName;\n\t\t\t}\n\n\t\t\t// Add data-toggle-target=\".selector1 #selector2\" to toggle different target\n\t\t\tif (current.hasAttribute('data-toggle-target')) {\n\t\t\t\tconst targetList = current.dataset.toggleTarget.split(' ');\n\n\t\t\t\tfor (let i = 0; i < targetList.length; i++) {\n\t\t\t\t\tconst target = document.querySelectorAll(targetList[i]);\n\n\t\t\t\t\tfor (let ib = 0; ib < target.length; ib++) {\n\t\t\t\t\t\ttarget[ib].classList.toggle(this.options.toggleClassName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrent.classList.toggle(this.options.toggleClassName);\n\t\t\t}\n\t\t}\n\t}\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"],"names":["Deepmerge","require","Toggle","element","options","this","defaults","triggers","toggleClassName","DOM","html","document","documentElement","body","updateEvents","bind","toggle","init","initEvents","querySelectorAll","elements","i","length","addEventListener","target","event","current","currentTarget","hasAttribute","preventDefault","dataset","targetList","toggleTarget","split","ib","classList","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","clone","deepmerge","val","Array","isArray","defaultArrayMerge","source","concat","map","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","arrayMerge","sourceIsArray","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","reduce","prev","next","deepmerge_1","module","exports"],"sourceRoot":""}
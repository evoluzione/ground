{"version":3,"file":"animationComparison.bundle.js","mappings":"klCAOAA,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAECC,EAAAA,SAAAA,I,urBAEpB,WAAYC,EAASC,GAAS,a,4FAAA,UAC7B,cAAMD,EAASC,IACVD,QAAUA,GAAW,gCAFG,E,0CAK9B,SAAcE,GACb,IAAMC,EAASD,EAAKE,cAAc,wBAC5BC,EAAcH,EAAKI,iBAAiB,8BACpCC,EAAcL,EAAKI,iBAAiB,kCACpCE,EAAcC,SAASP,EAAKQ,QAAQC,YAAa,IAE5Cd,EAAAA,GAAAA,SAAc,CACxBe,cAAe,CACdC,QAASV,EACTW,MAAO,gBACPC,IAAK,6BAAWZ,EAAOa,cACvBC,MAAOT,IAAe,EACtBU,KAAK,GAENC,SAAU,CAAEC,KAAM,UAGhBC,OAAOhB,EAAa,CAAEiB,SAAU,IAAKC,EAAG,GAAK,CAAED,SAAU,IAAKD,OAChEd,EACA,CAAEe,UAAW,IAAKC,EAAG,GACrB,CAAED,SAAU,GACZ,Q,sEA5BkBvB,CAA4ByB,EAAAA,U,kRCFjD3B,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAEC0B,EAAAA,WAKpB,WAAYxB,EAASC,I,4FAAS,SAC7BwB,KAAKzB,QAAUA,EACfyB,KAAKN,SAAW,CACfO,SAAUD,KAAKzB,SAEhByB,KAAKE,IAAM,CACVC,KAAMC,SAASC,gBACfC,KAAMF,SAASE,MAEhBN,KAAKxB,QAAUA,EAAU+B,GAAAA,CAAUP,KAAKN,SAAUlB,GAAWwB,KAAKN,SA4BlEM,KAAKQ,OACLR,KAAKS,WAAWT,KAAKxB,QAAQyB,U,yCAQ9B,WACCD,KAAKE,IAAI3B,QAAUyB,KAAKzB,U,wBAOzB,SAAW0B,GACVD,KAAKU,cAAcT,K,0BAcpB,SAAavB,GAAQ,WACpBsB,KAAKQ,OACLG,YAAW,WACV,EAAKD,cAAchC,KACjB,O,2BAOJ,SAAcD,GAEb,IAAMmC,EAAcnC,EAAKQ,QAAQ4B,OAEjCxC,EAAAA,EAAAA,OAAqB,CACpBe,QAASX,EACTY,MAAO,WACPyB,YAAaF,EACbG,cAAe,6B,sEA7FGhB","sources":["webpack://ground/./js/animations/animationComparison.js","webpack://ground/./js/animations/animationDefault.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport AnimationDefault from './animationDefault';\nimport deepmerge from 'deepmerge';\nimport { initObserver } from '../utilities/observer';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationComparison extends AnimationDefault {\n\n\tconstructor(element, options) {\n\t\tsuper(element, options);\n\t\tthis.element = element || '[data-scroll=\"js-comparison\"]';;\n\t}\n\n\tfireAnimation(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst targetMedia = item.querySelectorAll('[data-scroll-target-media]');\n\t\tconst targetImage = item.querySelectorAll('[data-scroll-target-media] img');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${target.offsetWidth}`,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tpin: true\n\t\t\t},\n\t\t\tdefaults: { ease: 'none' }\n\t\t});\n\n\t\ttl.fromTo(targetMedia, { xPercent: 100, x: 0 }, { xPercent: 0 }).fromTo(\n\t\t\ttargetImage,\n\t\t\t{ xPercent: -100, x: 0 },\n\t\t\t{ xPercent: 0 },\n\t\t\t0\n\t\t);\n\t}\n}\n","/* eslint-disable no-unused-vars */\n// import { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationDefault {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element;\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\t// this.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refresh', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_OUT', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('resize', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('NAVIGATE_IN', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_END', () => {});\n\n\t\t//  window.addEventListener('LOADER_COMPLETE', () => {\n\t\tthis.init();\n\t\tthis.initEvents(this.options.triggers);\n\t\t// initObserver(this.options.triggers, this.updateEvents);\n\t\t//  });\t\t\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = this.element;\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tthis.fireAnimation(triggers);\n\n\t\t// gsap.utils.toArray(triggers).forEach((element) => {\n\t\t// \tif (element.dataset.scroll === 'js-split-text') {\n\t\t// \t}  else {\n\t\t// \t\tthis.animationDefault(target);\n\t\t// \t}\n\t\t// });\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\tsetTimeout(() => {\n\t\t\tthis.fireAnimation(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Fire the animation\n\t * @param {node} item \n\t */\n\tfireAnimation(item) {\n\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n}\n"],"names":["gsap","ScrollTrigger","AnimationComparison","element","options","item","target","querySelector","targetMedia","querySelectorAll","targetImage","targetScrub","parseInt","dataset","scrollScrub","scrollTrigger","trigger","start","end","offsetWidth","scrub","pin","defaults","ease","fromTo","xPercent","x","AnimationDefault","this","triggers","DOM","html","document","documentElement","body","deepmerge","init","initEvents","fireAnimation","setTimeout","targetClass","scroll","toggleClass","toggleActions"],"sourceRoot":""}
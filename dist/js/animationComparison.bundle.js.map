{"version":3,"file":"animationComparison.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEAE,qDAAA,CAAoBC,mDAApB;;IAEqBE;AACpB;AACD;AACA;AACA;AACC,+BAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC7B,SAAKD,OAAL,GAAeA,OAAO,IAAI,+BAA1B;AAA0D;AAC1D,SAAKE,QAAL,GAAgB;AACfC,MAAAA,QAAQ,EAAE,KAAKH;AADA,KAAhB;AAGA,SAAKI,GAAL,GAAW;AACVC,MAAAA,IAAI,EAAEC,QAAQ,CAACC,eADL;AAEVC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFL,KAAX;AAIA,SAAKP,OAAL,GAAeA,OAAO,GAAGP,gDAAS,CAAC,KAAKQ,QAAN,EAAgBD,OAAhB,CAAZ,GAAuC,KAAKC,QAAlE;AACA,SAAKO,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,YAAM,CAAE,CAApD;AAEAf,IAAAA,oEAAA,CAA+B,aAA/B,EAA8C,YAAM,CAAE,CAAtD;AAEAA,IAAAA,oEAAA,CAA+B,WAA/B,EAA4C,YAAM,CAAE,CAApD;AAEAA,IAAAA,oEAAA,CAA+B,aAA/B,EAA8C,YAAM,CAAE,CAAtD;AAEAA,IAAAA,oEAAA,CAA+B,SAA/B,EAA0C,YAAM,CAAE,CAAlD;AAEAc,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,YAAM,CAC7C;AACA;AACA,KAHD;AAKAD,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAM,CACvC;AACA;AACA,KAHD;AAKAD,IAAAA,MAAM,CAACC,gBAAP,CAAwB,aAAxB,EAAuC,YAAM,CAAE,CAA/C;AAEAD,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,YAAM,CAAE,CAAhD,EAlC6B,CAoC7B;;AACC,SAAKC,IAAL;AACA,SAAKC,UAAL,CAAgB,KAAKb,OAAL,CAAaE,QAA7B;AACAR,IAAAA,iEAAY,CAAC,KAAKM,OAAL,CAAaE,QAAd,EAAwB,KAAKM,YAA7B,CAAZ,CAvC4B,CAwC7B;AACA;AAED;AACD;AACA;;;;;WACC,gBAAO;AACN,WAAKL,GAAL,CAASJ,OAAT,GAAmBM,QAAQ,CAACS,gBAAT,CAA0B,KAAKf,OAA/B,CAAnB;AACA;AAED;AACD;AACA;AACA;;;;WACC,oBAAWG,QAAX,EAAqB;AAAA;;AACpB;AACAP,MAAAA,oDAAA,CAAmBO,QAAnB,EAA6Be,OAA7B,CAAqC,UAAClB,OAAD,EAAa;AACjD,YAAIA,OAAO,CAACmB,OAAR,CAAgBC,MAAhB,KAA2B,eAA/B,EAAgD;AAC/C,eAAI,CAACC,mBAAL,CAAyBrB,OAAzB;AACA,SAFD,MAEO,IAAIA,OAAO,CAACmB,OAAR,CAAgBC,MAAhB,KAA2B,aAA/B,EAA8C;AACpD,eAAI,CAACE,iBAAL,CAAuBtB,OAAvB;AACA,SAFM,MAEA,IAAIA,OAAO,CAACmB,OAAR,CAAgBC,MAAhB,KAA2B,UAA/B,EAA2C;AACjD,eAAI,CAACG,cAAL,CAAoBvB,OAApB;AACA,SAFM,MAGF;AACJ,eAAI,CAACwB,gBAAL,CAAsBxB,OAAtB;AACA;AACD,OAXD;AAYA;AAED;AACD;AACA;AACA;;;;WACC,sBAAayB,MAAb,EAAqB;AAAA;;AACpB,WAAKZ,IAAL;AAEAa,MAAAA,UAAU,CAAC,YAAM;AAChB,YAAID,MAAM,CAACN,OAAP,CAAeC,MAAf,KAA0B,eAA9B,EAA+C;AAC9C,gBAAI,CAACC,mBAAL,CAAyBI,MAAzB;AACA,SAFD,MAEO,IAAIA,MAAM,CAACN,OAAP,CAAeC,MAAf,KAA0B,aAA9B,EAA6C;AACnD,gBAAI,CAACE,iBAAL,CAAuBG,MAAvB;AACA,SAFM,MAEA,IAAIA,MAAM,CAACN,OAAP,CAAeC,MAAf,KAA0B,UAA9B,EAA0C;AAChD,gBAAI,CAACG,cAAL,CAAoBE,MAApB;AACA,SAFM,MAGF;AACJ;AACA,gBAAI,CAACD,gBAAL,CAAsBC,MAAtB;AACA;AACD,OAZS,EAYP,IAZO,CAAV;AAaA;AAED;AACD;AACA;;;;WACC,0BAAiBE,IAAjB,EAAuB;AACtB,UAAMC,WAAW,GAAGD,IAAI,CAACR,OAAL,CAAaC,MAAjC;AAEAvB,MAAAA,0DAAA,CAAqB;AACpBiC,QAAAA,OAAO,EAAEH,IADW;AAEpBI,QAAAA,KAAK,EAAE,UAFa;AAGpBC,QAAAA,WAAW,EAAEJ,WAHO;AAIpBK,QAAAA,aAAa,EAAE,qBAJK,CAKpB;AACA;;AANoB,OAArB;AAQA;AAED;AACD;AACA;;;;WACC,2BAAkBN,IAAlB,EAAwB;AACvB,UAAMO,WAAW,GAAGC,QAAQ,CAACR,IAAI,CAACR,OAAL,CAAaiB,WAAd,EAA2B,EAA3B,CAA5B;AAEA,UAAMC,EAAE,GAAGzC,+CAAA,CAAc;AACxB2C,QAAAA,aAAa,EAAE;AACdT,UAAAA,OAAO,EAAEH,IADK;AAEdM,UAAAA,aAAa,EAAE,sBAFD;AAGdO,UAAAA,KAAK,EAAEN,WAAW,IAAI;AAHR;AADS,OAAd,CAAX;AAQAG,MAAAA,EAAE,CAACI,EAAH,CAAMd,IAAN,EAAY;AACXe,QAAAA,CAAC,EAAE,CAACf,IAAI,CAACR,OAAL,CAAawB,YAAd,GAA6B,GAA7B,IAAoC,CAD5B;AAEXC,QAAAA,CAAC,EAAE,CAACjB,IAAI,CAACR,OAAL,CAAa0B,YAAd,GAA6B,GAA7B,IAAoC;AAF5B,OAAZ;AAIA;AAED;AACD;AACA;;;;WACC,wBAAelB,IAAf,EAAqB;AACpB,UAAMmB,WAAW,GAAGnB,IAAI,CAACoB,aAAL,CAAmB,sBAAnB,CAApB;AAEAnD,MAAAA,+CAAA,CAAc;AACb2C,QAAAA,aAAa,EAAE;AACdT,UAAAA,OAAO,EAAEH,IADK;AAEdI,UAAAA,KAAK,EAAE,YAFO;AAGdiB,UAAAA,GAAG,EAAE,YAHS;AAIdC,UAAAA,OAAO,EAAE,KAJK;AAKdC,UAAAA,OAAO,EAAE;AAAA,mBAAMJ,WAAW,CAACK,IAAZ,EAAN;AAAA,WALK;AAMdC,UAAAA,OAAO,EAAE,mBAAM;AACdN,YAAAA,WAAW,CAACO,KAAZ;AACAP,YAAAA,WAAW,CAACQ,WAAZ,GAA0B,CAA1B;AACA,WATa;AAUdC,UAAAA,WAAW,EAAE;AAAA,mBAAMT,WAAW,CAACK,IAAZ,EAAN;AAAA,WAVC;AAWdK,UAAAA,WAAW,EAAE,uBAAM;AAClBV,YAAAA,WAAW,CAACO,KAAZ;AACAP,YAAAA,WAAW,CAACQ,WAAZ,GAA0B,CAA1B;AACA;AAda;AADF,OAAd;AAkBA;AAED;AACD;AACA;;;;WACC,0CAAiC3B,IAAjC,EAAuC;AACtC,UAAMF,MAAM,GAAGE,IAAI,CAACoB,aAAL,CAAmB,sBAAnB,CAAf;AACA,UAAMU,OAAO,GAAG9B,IAAI,CAACZ,gBAAL,CAAsB,uBAAtB,CAAhB;AACA,UAAMmB,WAAW,GAAGC,QAAQ,CAACR,IAAI,CAACR,OAAL,CAAaiB,WAAd,EAA2B,EAA3B,CAA5B;AAEA,UAAMsB,QAAQ,GAAG9D,oDAAA,CAAmB6D,OAAnB,CAAjB;AAEA,UAAIE,QAAQ,GAAG,CAAf;;AAEA,UAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzBD,QAAAA,QAAQ,GAAG,CAAX;AACAD,QAAAA,QAAQ,CAACxC,OAAT,CAAiB,UAACuC,OAAD,EAAa;AAC7BE,UAAAA,QAAQ,IAAIF,OAAO,CAACI,WAApB;AACA,SAFD;AAGA,OALD;;AAMAD,MAAAA,WAAW;AACX/D,MAAAA,oEAAA,CAA+B,aAA/B,EAA8C+D,WAA9C;AAEAhE,MAAAA,yCAAA,CAAQ8D,QAAR,EAAkB;AACjBd,QAAAA,CAAC,EAAE;AAAA,4BAAUe,QAAQ,GAAGhD,MAAM,CAACmD,UAA5B;AAAA,SADc;AAEjBC,QAAAA,IAAI,EAAE,MAFW;AAGjBxB,QAAAA,aAAa,EAAE;AACdT,UAAAA,OAAO,EAAEL,MADK;AAEduC,UAAAA,GAAG,EAAE,IAFS;AAGdC,UAAAA,WAAW,EAAE,IAHC;AAIdzB,UAAAA,KAAK,EAAEN,WAAW,IAAI,KAJR;AAKdH,UAAAA,KAAK,EAAE,eALO;AAMdiB,UAAAA,GAAG,EAAE;AAAA,+BAAWW,QAAX;AAAA,WANS;AAOdO,UAAAA,mBAAmB,EAAE;AAPP;AAHE,OAAlB,EAlBsC,CAgCtC;AACA;AACA;AACA;AACA;;AAEAR,MAAAA,QAAQ,CAACxC,OAAT,CAAiB,UAACiD,GAAD,EAAMC,CAAN,EAAY;AAC5BvE,QAAAA,0DAAA,CAAqB;AACpBiC,UAAAA,OAAO,EAAEqC,GADW;AAEpBpC,UAAAA,KAAK,EAAE;AAAA,mBACN,cACA,CAACoC,GAAG,CAACE,UAAJ,GAAiB1D,MAAM,CAACmD,UAAP,GAAoB,CAAtC,KAA4CH,QAAQ,IAAIA,QAAQ,GAAGhD,MAAM,CAACmD,UAAtB,CAApD,CAFM;AAAA,WAFa;AAKpBd,UAAAA,GAAG,EAAE;AAAA,mBAAM,OAAOmB,GAAG,CAACN,WAAJ,IAAmBF,QAAQ,IAAIA,QAAQ,GAAGhD,MAAM,CAACmD,UAAtB,CAA3B,CAAb;AAAA,WALe;AAMpB9B,UAAAA,WAAW,EAAE;AAAEsC,YAAAA,OAAO,EAAEH,GAAX;AAAgBI,YAAAA,SAAS,EAAE;AAA3B,WANO,CAOpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtBoB,SAArB;AAwBA,OAzBD,EAtCsC,CAiEtC;AACA;AACA;AACA;AAED;AACD;AACA;;;;WACC,6BAAoB5C,IAApB,EAA0B;AACzB,UAAMF,MAAM,GAAGE,IAAI,CAACoB,aAAL,CAAmB,sBAAnB,CAAf;AACA,UAAMyB,WAAW,GAAG7C,IAAI,CAACZ,gBAAL,CAAsB,4BAAtB,CAApB;AACA,UAAM0D,WAAW,GAAG9C,IAAI,CAACZ,gBAAL,CAAsB,gCAAtB,CAApB;AACA,UAAMmB,WAAW,GAAGC,QAAQ,CAACR,IAAI,CAACR,OAAL,CAAaiB,WAAd,EAA2B,EAA3B,CAA5B;AAEA,UAAMC,EAAE,GAAGzC,+CAAA,CAAc;AACxB2C,QAAAA,aAAa,EAAE;AACdT,UAAAA,OAAO,EAAEL,MADK;AAEdM,UAAAA,KAAK,EAAE,eAFO;AAGdiB,UAAAA,GAAG,EAAE;AAAA,+BAAWvB,MAAM,CAACoC,WAAlB;AAAA,WAHS;AAIdrB,UAAAA,KAAK,EAAEN,WAAW,IAAI,KAJR;AAKd8B,UAAAA,GAAG,EAAE,IALS;AAMdC,UAAAA,WAAW,EAAE,IANC;AAOdS,UAAAA,aAAa,EAAE;AAPD,SADS;AAUxBxE,QAAAA,QAAQ,EAAE;AAAE6D,UAAAA,IAAI,EAAE;AAAR;AAVc,OAAd,CAAX;AAaA1B,MAAAA,EAAE,CAACsC,MAAH,CAAUH,WAAV,EAAuB;AAAEI,QAAAA,QAAQ,EAAE,GAAZ;AAAiBhC,QAAAA,CAAC,EAAE;AAApB,OAAvB,EAAgD;AAAEgC,QAAAA,QAAQ,EAAE;AAAZ,OAAhD,EAAiED,MAAjE,CACCF,WADD,EAEC;AAAEG,QAAAA,QAAQ,EAAE,CAAC,GAAb;AAAkBhC,QAAAA,CAAC,EAAE;AAArB,OAFD,EAGC;AAAEgC,QAAAA,QAAQ,EAAE;AAAZ,OAHD,EAIC,CAJD;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5QF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASjF,YAAT,CAAsBQ,QAAtB,EAAgC0E,QAAhC,EAA0C;AAChD,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,aAAX,EAA6B;AACnD;AACA,QAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf,CAFmD,CAGnD;;AAHmD,+CAItBF,aAJsB;AAAA;;AAAA;AAInD,0DAA4C;AAAA,YAA/BG,UAA+B,eAA/BA,UAA+B;;AAAA,oDACxBA,UADwB;AAAA;;AAAA;AAC3C,iEAA+B;AAAA,gBAApBC,IAAoB;;AAC9B;AAEA;AACA,gBAAIA,IAAI,CAACC,QAAL,KAAkB,CAAtB,EAAyB;AACxB;AACA,kBAAID,IAAI,CAACE,OAAL,CAAaP,QAAb,CAAJ,EAA4B;AAC3BE,gBAAAA,MAAM,CAACM,GAAP,CAAWH,IAAX;AACA,eAJuB,CAKxB;;;AALwB,0DAMJA,IAAI,CAACrE,gBAAL,CAAsBgE,QAAtB,CANI;AAAA;;AAAA;AAMxB,uEAAqD;AAAA,sBAA1CS,KAA0C;AACpDP,kBAAAA,MAAM,CAACM,GAAP,CAAWC,KAAX;AACA;AARuB;AAAA;AAAA;AAAA;AAAA;AASxB;AACD;AAf0C;AAAA;AAAA;AAAA;AAAA;AAgB3C;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9BqD;AAAA;AAAA;AAAA;AAAA;;AAgCnD,8BAAWP,MAAX,EAhCmD,CAgC/B;AACpB,GAjCD;;AAmCA,MAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACT,aAAD,EAAmB;AAC3C,QAAMC,MAAM,GAAGH,cAAc,CAAC3E,QAAD,EAAW6E,aAAX,CAA7B;AACAC,IAAAA,MAAM,CAAC/D,OAAP,CAAe,UAAClB,OAAD,EAAa;AAC3B6E,MAAAA,QAAQ,CAAC7E,OAAD,CAAR;AACA,KAFD;AAGA,GALD;;AAOA,MAAM0F,MAAM,GAAG;AACdC,IAAAA,SAAS,EAAE,IADG;AAEdC,IAAAA,UAAU,EAAE,KAFE;AAGdC,IAAAA,aAAa,EAAE,KAHD;AAIdC,IAAAA,OAAO,EAAE;AAJK,GAAf;AAMA,MAAMC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBP,gBAArB,CAAjB;AACAM,EAAAA,QAAQ,CAACE,OAAT,CAAiB3F,QAAQ,CAACC,eAA1B,EAA2CmF,MAA3C,EAlDgD,CAmDhD;AACA","sources":["webpack://ground/./js/animations/animationComparison.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport deepmerge from 'deepmerge';\nimport { initObserver } from '../utilities/observer';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationComparison {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-scroll=\"js-comparison\"]';;\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\twindow.addEventListener('DOMContentLoaded', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\tScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\tScrollTrigger.addEventListener('refresh', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_OUT', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('NAVIGATE_IN', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_END', () => {});\n\n\t\t// window.addEventListener('LOADER_COMPLETE', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\t// TODO: js pin non funziona\n\t\tgsap.utils.toArray(triggers).forEach((element) => {\n\t\t\tif (element.dataset.scroll === 'js-comparison') {\n\t\t\t\tthis.animationComparison(element);\n\t\t\t} else if (element.dataset.scroll === 'js-parallax') {\n\t\t\t\tthis.animationParallax(element);\n\t\t\t} else if (element.dataset.scroll === 'js-video') {\n\t\t\t\tthis.animationVideo(element);\n\t\t\t} \n\t\t\telse {\n\t\t\t\tthis.animationDefault(element);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\n\t\tsetTimeout(() => {\n\t\t\tif (target.dataset.scroll === 'js-comparison') {\n\t\t\t\tthis.animationComparison(target);\n\t\t\t} else if (target.dataset.scroll === 'js-parallax') {\n\t\t\t\tthis.animationParallax(target);\n\t\t\t} else if (target.dataset.scroll === 'js-video') {\n\t\t\t\tthis.animationVideo(target);\n\t\t\t} \n\t\t\telse {\n\t\t\t\t// TODO: individuare il trigger\n\t\t\t\tthis.animationDefault(target);\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * default Animation\n\t */\n\tanimationDefault(item) {\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n\n\t/**\n\t * parallax Animation\n\t */\n\tanimationParallax(item) {\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\ttoggleActions: 'play pause none none',\n\t\t\t\tscrub: targetScrub || 2\n\t\t\t}\n\t\t});\n\n\t\ttl.to(item, {\n\t\t\ty: -item.dataset.scrollSpeedY * 100 || 0,\n\t\t\tx: -item.dataset.scrollSpeedX * 100 || 0\n\t\t});\n\t}\n\n\t/**\n\t * video Animation\n\t */\n\tanimationVideo(item) {\n\t\tconst targetVideo = item.querySelector('[data-scroll-target]');\n\n\t\tgsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tstart: 'top bottom',\n\t\t\t\tend: 'bottom top',\n\t\t\t\tmarkers: false,\n\t\t\t\tonEnter: () => targetVideo.play(),\n\t\t\t\tonLeave: () => {\n\t\t\t\t\ttargetVideo.pause();\n\t\t\t\t\ttargetVideo.currentTime = 0;\n\t\t\t\t},\n\t\t\t\tonEnterBack: () => targetVideo.play(),\n\t\t\t\tonLeaveBack: () => {\n\t\t\t\t\ttargetVideo.pause();\n\t\t\t\t\ttargetVideo.currentTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * pin Horizontal Section Animation\n\t */\n\tanimationHorizontalScrollSection(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst section = item.querySelectorAll('[data-scroll-section]');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst sections = gsap.utils.toArray(section);\n\n\t\tlet maxWidth = 0;\n\n\t\tconst getMaxWidth = () => {\n\t\t\tmaxWidth = 0;\n\t\t\tsections.forEach((section) => {\n\t\t\t\tmaxWidth += section.offsetWidth;\n\t\t\t});\n\t\t};\n\t\tgetMaxWidth();\n\t\tScrollTrigger.addEventListener('refreshInit', getMaxWidth);\n\n\t\tgsap.to(sections, {\n\t\t\tx: () => `-${maxWidth - window.innerWidth}`,\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tpin: true,\n\t\t\t\tpinReparent: true,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${maxWidth}`,\n\t\t\t\tinvalidateOnRefresh: true\n\t\t\t}\n\t\t});\n\n\t\t// ADD SKEW\n\t\t// let proxy = { skew: 0 },\n\t\t// \tskewSetter = gsap.quickSetter(section, 'skewX', 'deg'), // fast\n\t\t// \tclamp = gsap.utils.clamp(-10, 10) // don't let the skew go beyond [X] degrees.\n\t\t// END SKEW\n\n\t\tsections.forEach((sct, i) => {\n\t\t\tScrollTrigger.create({\n\t\t\t\ttrigger: sct,\n\t\t\t\tstart: () =>\n\t\t\t\t\t'top top-=' +\n\t\t\t\t\t(sct.offsetLeft - window.innerWidth / 2) * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\tend: () => '+=' + sct.offsetWidth * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\ttoggleClass: { targets: sct, className: 'active' }\n\t\t\t\t// ADD SKEW\n\t\t\t\t// onUpdate: (self) => {\n\t\t\t\t// \tlet skew = clamp(self.getVelocity() / -500)\n\t\t\t\t// \t// only do something if the skew is MORE severe. Remember, we're always tweening back to 0, so if the user slows their scrolling quickly, it's more natural to just let the tween handle that smoothly rather than jumping to the smaller skew.\n\t\t\t\t// \tif (Math.abs(skew) > Math.abs(proxy.skew)) {\n\t\t\t\t// \t\tproxy.skew = skew\n\t\t\t\t// \t\tgsap.to(proxy, {\n\t\t\t\t// \t\t\tskew: 0,\n\t\t\t\t// \t\t\tduration: 0.5,\n\t\t\t\t// \t\t\tease: 'circ',\n\t\t\t\t// \t\t\toverwrite: true,\n\t\t\t\t// \t\t\tonUpdate: () => skewSetter(proxy.skew),\n\t\t\t\t// \t\t})\n\t\t\t\t// \t}\n\t\t\t\t// },\n\t\t\t\t// END SKEW\n\t\t\t});\n\t\t});\n\n\t\t// SKEW: make the right edge \"stick\" to the scroll bar. force3D: true improves performance\n\t\t// gsap.set(section, { transformOrigin: 'center center', force3D: true })\n\t\t// END SKEW\n\t}\n\n\t/**\n\t * comparison Animation\n\t */\n\tanimationComparison(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst targetMedia = item.querySelectorAll('[data-scroll-target-media]');\n\t\tconst targetImage = item.querySelectorAll('[data-scroll-target-media] img');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${target.offsetWidth}`,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tpin: true,\n\t\t\t\tpinReparent: true,\n\t\t\t\tanticipatePin: 1\n\t\t\t},\n\t\t\tdefaults: { ease: 'none' }\n\t\t});\n\n\t\ttl.fromTo(targetMedia, { xPercent: 100, x: 0 }, { xPercent: 0 }).fromTo(\n\t\t\ttargetImage,\n\t\t\t{ xPercent: -100, x: 0 },\n\t\t\t{ xPercent: 0 },\n\t\t\t0\n\t\t);\n\t}\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["deepmerge","initObserver","gsap","ScrollTrigger","registerPlugin","AnimationComparison","element","options","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","window","addEventListener","init","initEvents","querySelectorAll","utils","toArray","forEach","dataset","scroll","animationComparison","animationParallax","animationVideo","animationDefault","target","setTimeout","item","targetClass","create","trigger","start","toggleClass","toggleActions","targetScrub","parseInt","scrollScrub","tl","timeline","scrollTrigger","scrub","to","y","scrollSpeedY","x","scrollSpeedX","targetVideo","querySelector","end","markers","onEnter","play","onLeave","pause","currentTime","onEnterBack","onLeaveBack","section","sections","maxWidth","getMaxWidth","offsetWidth","innerWidth","ease","pin","pinReparent","invalidateOnRefresh","sct","i","offsetLeft","targets","className","targetMedia","targetImage","anticipatePin","fromTo","xPercent","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","entry","observerCallback","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
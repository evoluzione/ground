{"version":3,"file":"infiniteScroll.bundle.js","mappings":"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","sources":["webpack://ground/./js/components/infiniteScroll.js","webpack://ground/./js/utilities/environment.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["/**\n * Infinite Scroll module\n * Automatically add next page\n * @see https://infinite-scroll.com\n * TODO: Fix Smoothscroll\n * TODO: Fix highway on new link\n */\nimport { initObserver } from '../utilities/observer';\nimport { DEBUG_MODE } from '../utilities/environment';\n\nimport deepmerge from 'deepmerge';\nimport InfScroll from 'infinite-scroll';\n\nexport default class InfiniteScroll {\n\t/**\n\t * @param {string} element - Container element\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '.js-infinite-container';\n\t\tthis.defaults = {\n\t\t\tpath: '.js-infinite-next-page',\n\t\t\tappend: '.js-infinite-post',\n\t\t\thistory: false,\n\t\t\tscrollThreshold: 400,\n\t\t\thideNav: '.js-pagination',\n\t\t\tstatus: '.js-infinite-status',\n\t\t\tdebug: !!DEBUG_MODE\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {\n\t\t\tthis.init();\n\t\t\tinitObserver(this.element, this.updateEvents);\n\t\t// });\n\n\t\t// TODO: Destroy with observer\n\t\twindow.addEventListener('NAVIGATE_OUT', () => {\n\t\t\tthis.destroy();\n\t\t});\n\t}\n\n\t/**\n\t * Initialize plugin\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelector(this.element);\n\t\tthis.DOM.path = document.querySelector(this.options.path);\n\n\t\tif (\n\t\t\t(this.DOM.path === null && this.DOM.element === null) ||\n\t\t\t(this.DOM.path !== null && this.DOM.element === null) ||\n\t\t\t(this.DOM.path === null && this.DOM.element !== null)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.infScroll = new InfScroll(this.element, this.options);\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents() {\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Remove Infinite Scroll functionality completely\n\t */\n\tdestroy() {\n\t\tif (this.infScroll === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis.infScroll.destroy();\n\t}\n}\n","/**\n * Shared constants\n */\n\nexport const DEBUG_MODE = false;\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["initObserver","DEBUG_MODE","deepmerge","InfScroll","InfiniteScroll","element","options","defaults","path","append","history","scrollThreshold","hideNav","status","debug","DOM","html","document","documentElement","body","updateEvents","bind","init","window","addEventListener","destroy","querySelector","infScroll","undefined","triggers","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","querySelectorAll","entry","observerCallback","forEach","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
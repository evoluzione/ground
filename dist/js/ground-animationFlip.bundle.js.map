{"version":3,"file":"ground-animationFlip.bundle.js","mappings":"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","sources":["webpack://ground/./js/animations/animationFlip.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["import { initObserver } from '../utilities/observer';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { Draggable } from 'gsap/all';\nimport { Flip } from 'gsap/all';\n\ngsap.registerPlugin( Flip, Draggable);\n\nexport default class AnimationFlip {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-flip]';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('LOADER_COMPLETE', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tgsap.utils.toArray(triggers).forEach((element) => {\n\t\t\tthis.defaultAnimation(element);\n\t\t});\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\tthis.defaultAnimation(element);\n\t}\n\n\t/**\n\t * default Animation\n\t */\n\tdefaultAnimation(item) {\n\t\tconst flipFrom = item.querySelector('[data-flip-from]');\n\t\tconst flipTo = item.querySelector('[data-flip-to]');\n\t\tconst flipItem = item.querySelector('[data-flip-item]');\n\t\tconst flipTrigger = item.querySelector('[data-flip-trigger]');\n\n\t\tDraggable.create(flipFrom);\n\t\tDraggable.create(flipTo);\n\n\t\tflipTrigger.addEventListener('click', () => {\n\t\t\tconst state = Flip.getState(flipItem);\n\n\t\t\tflipItem.classList.toggle('active');\n\n\t\t\tif (flipItem.parentElement === flipFrom) {\n\t\t\t\tflipTo.appendChild(flipItem);\n\t\t\t} else {\n\t\t\t\tflipFrom.appendChild(flipItem);\n\t\t\t}\n\n\t\t\tFlip.from(state, {\n\t\t\t\tduration: 0.6,\n\t\t\t\tscale: true,\n\t\t\t\tabsolute: true,\n\t\t\t\tease: 'power3.inOut'\n\t\t\t});\n\t\t});\n\t}\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["initObserver","deepmerge","gsap","Draggable","Flip","registerPlugin","AnimationFlip","element","options","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","init","initEvents","querySelectorAll","utils","toArray","forEach","defaultAnimation","target","item","flipFrom","querySelector","flipTo","flipItem","flipTrigger","create","addEventListener","state","getState","classList","toggle","parentElement","appendChild","from","duration","scale","absolute","ease","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","entry","observerCallback","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
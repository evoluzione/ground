{"version":3,"file":"ground-animationComparison.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAG,qDAAA,CAAoBC,mDAApB;;IAEqBE;;;;;AAEpB,+BAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAAA;;AAC7B,8BAAMD,OAAN,EAAeC,OAAf;AACA,UAAKD,OAAL,GAAeA,OAAO,IAAI,+BAA1B;AAA0D;AAF7B;AAG7B;;;;WAED,uBAAcE,IAAd,EAAoB;AACnB,UAAMC,MAAM,GAAGD,IAAI,CAACE,aAAL,CAAmB,sBAAnB,CAAf;AACA,UAAMC,WAAW,GAAGH,IAAI,CAACI,gBAAL,CAAsB,4BAAtB,CAApB;AACA,UAAMC,WAAW,GAAGL,IAAI,CAACI,gBAAL,CAAsB,gCAAtB,CAApB;AACA,UAAME,WAAW,GAAGC,QAAQ,CAACP,IAAI,CAACQ,OAAL,CAAaC,WAAd,EAA2B,EAA3B,CAA5B;AAEA,UAAMC,EAAE,GAAGhB,+CAAA,CAAc;AACxBkB,QAAAA,aAAa,EAAE;AACdC,UAAAA,OAAO,EAAEZ,MADK;AAEda,UAAAA,KAAK,EAAE,eAFO;AAGdC,UAAAA,GAAG,EAAE;AAAA,+BAAWd,MAAM,CAACe,WAAlB;AAAA,WAHS;AAIdC,UAAAA,KAAK,EAAEX,WAAW,IAAI,KAJR;AAKdY,UAAAA,GAAG,EAAE;AALS,SADS;AAQxBC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AARc,OAAd,CAAX;AAWAV,MAAAA,EAAE,CAACW,MAAH,CAAUlB,WAAV,EAAuB;AAAEmB,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,CAAC,EAAE;AAApB,OAAvB,EAAgD;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAhD,EAAiED,MAAjE,CACChB,WADD,EAEC;AAAEiB,QAAAA,QAAQ,EAAE,CAAC,GAAb;AAAkBC,QAAAA,CAAC,EAAE;AAArB,OAFD,EAGC;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAHD,EAIC,CAJD;AAMA;;;;EA9B+C/B;;;;;;;;;;;;;;;;;;;;;;;;;;ACTjD;AACA;AACA;AACA;AACA;AACA;AAEAG,qDAAA,CAAoBC,mDAApB;;IAEqBJ;AACpB;AACD;AACA;AACA;AACC,4BAAYO,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC7B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKqB,QAAL,GAAgB;AACfK,MAAAA,QAAQ,EAAE,KAAK1B;AADA,KAAhB;AAGA,SAAK2B,GAAL,GAAW;AACVC,MAAAA,IAAI,EAAEC,QAAQ,CAACC,eADL;AAEVC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFL,KAAX;AAIA,SAAK9B,OAAL,GAAeA,OAAO,GAAGP,gDAAS,CAAC,KAAK2B,QAAN,EAAgBpB,OAAhB,CAAZ,GAAuC,KAAKoB,QAAlE,CAT6B,CAU7B;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AACA,SAAKW,IAAL;AACA,SAAKC,UAAL,CAAgB,KAAKhC,OAAL,CAAayB,QAA7B,EAtC6B,CAuC7B;AACA;AACA;AAED;AACD;AACA;;;;;WACC,gBAAO;AACN,WAAKC,GAAL,CAAS3B,OAAT,GAAmB,KAAKA,OAAxB;AACA;AAED;AACD;AACA;AACA;;;;WACC,oBAAW0B,QAAX,EAAqB;AACpB,WAAKQ,aAAL,CAAmBR,QAAnB,EADoB,CAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AACD;AACA;AACA;;;;WACC,sBAAavB,MAAb,EAAqB;AAAA;;AACpB,WAAK6B,IAAL;AACAG,MAAAA,UAAU,CAAC,YAAM;AAChB,aAAI,CAACD,aAAL,CAAmB/B,MAAnB;AACA,OAFS,EAEP,IAFO,CAAV;AAGA;AAED;AACD;AACA;AACA;;;;WACC,uBAAcD,IAAd,EAAoB;AAEnB,UAAMkC,WAAW,GAAGlC,IAAI,CAACQ,OAAL,CAAa2B,MAAjC;AAEAxC,MAAAA,0DAAA,CAAqB;AACpBkB,QAAAA,OAAO,EAAEb,IADW;AAEpBc,QAAAA,KAAK,EAAE,UAFa;AAGpBuB,QAAAA,WAAW,EAAEH,WAHO;AAIpBI,QAAAA,aAAa,EAAE,qBAJK;AAKpBC,QAAAA,IAAI,EAAE,IALc,CAMpB;;AANoB,OAArB;AAQA","sources":["webpack://ground/./js/animations/animationComparison.js","webpack://ground/./js/animations/animationDefault.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport AnimationDefault from './animationDefault';\nimport deepmerge from 'deepmerge';\nimport { initObserver } from '../utilities/observer';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationComparison extends AnimationDefault {\n\n\tconstructor(element, options) {\n\t\tsuper(element, options);\n\t\tthis.element = element || '[data-scroll=\"js-comparison\"]';;\n\t}\n\n\tfireAnimation(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst targetMedia = item.querySelectorAll('[data-scroll-target-media]');\n\t\tconst targetImage = item.querySelectorAll('[data-scroll-target-media] img');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${target.offsetWidth}`,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tpin: true\n\t\t\t},\n\t\t\tdefaults: { ease: 'none' }\n\t\t});\n\n\t\ttl.fromTo(targetMedia, { xPercent: 100, x: 0 }, { xPercent: 0 }).fromTo(\n\t\t\ttargetImage,\n\t\t\t{ xPercent: -100, x: 0 },\n\t\t\t{ xPercent: 0 },\n\t\t\t0\n\t\t);\n\t}\n}\n","/* eslint-disable no-unused-vars */\n// import { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationDefault {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element;\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\t// this.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refresh', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_OUT', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('resize', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('NAVIGATE_IN', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_END', () => {});\n\n\t\t//  window.addEventListener('LOADER_COMPLETE', () => {\n\t\tthis.init();\n\t\tthis.initEvents(this.options.triggers);\n\t\t// initObserver(this.options.triggers, this.updateEvents);\n\t\t//  });\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = this.element;\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tthis.fireAnimation(triggers);\n\n\t\t// gsap.utils.toArray(triggers).forEach((element) => {\n\t\t// \tif (element.dataset.scroll === 'js-split-text') {\n\t\t// \t}  else {\n\t\t// \t\tthis.animationDefault(target);\n\t\t// \t}\n\t\t// });\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\tsetTimeout(() => {\n\t\t\tthis.fireAnimation(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Fire the animation\n\t * @param {node} item\n\t */\n\tfireAnimation(item) {\n\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none',\n\t\t\tonce: true\n\t\t\t// markers: true,\n\t\t});\n\t}\n}\n"],"names":["AnimationDefault","deepmerge","initObserver","gsap","ScrollTrigger","registerPlugin","AnimationComparison","element","options","item","target","querySelector","targetMedia","querySelectorAll","targetImage","targetScrub","parseInt","dataset","scrollScrub","tl","timeline","scrollTrigger","trigger","start","end","offsetWidth","scrub","pin","defaults","ease","fromTo","xPercent","x","triggers","DOM","html","document","documentElement","body","init","initEvents","fireAnimation","setTimeout","targetClass","scroll","create","toggleClass","toggleActions","once"],"sourceRoot":""}
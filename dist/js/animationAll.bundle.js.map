{"version":3,"file":"animationAll.bundle.js","mappings":"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","sources":["webpack://ground/./js/animations/animationAllCopy.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { MorphSVGPlugin, DrawSVGPlugin, SplitText, ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger, SplitText, DrawSVGPlugin, MorphSVGPlugin);\n\nexport default class AnimationsAll {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-scroll]';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\twindow.addEventListener('DOMContentLoaded', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\tScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\tScrollTrigger.addEventListener('refresh', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_OUT', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('NAVIGATE_IN', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_END', () => {});\n\n\t\t// window.addEventListener('LOADER_COMPLETE', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\n\tgetAnimation(element){\n\n\t\tconsole.log('getAnimation');\n\n\t\tif (element.dataset.scroll === 'js-split-text') {\n\t\t\tthis.animationSplitText(element);\n\t\t} else if (element.dataset.scroll === 'js-rotation') {\n\t\t\tthis.animationRotation(element);\n\t\t} else if (element.dataset.scroll === 'js-batch') {\n\t\t\tthis.animationBatch(element);\n\t\t} else if (element.dataset.scroll === 'js-scale') {\n\t\t\tthis.animationScale(element);\n\t\t} else if (element.dataset.scroll === 'js-draw') {\n\t\t\tthis.animationDraw(element);\n\t\t} else if (element.dataset.scroll === 'js-bg-color') {\n\t\t\tthis.animationChangeBgColor(element);\n\t\t} else if (element.dataset.scroll === 'js-pin') {\n\t\t\tthis.animationPin(element);\n\t\t} else if (element.dataset.scroll === 'js-sprite-images') {\n\t\t\tthis.animationSpriteImages(element);\n\t\t} else if (element.dataset.scroll === 'js-horizontal-scroll') {\n\t\t\tthis.animationHorizontalScroll(element);\n\t\t} else if (element.dataset.scroll === 'js-horizontal-scroll-container') {\n\t\t\tthis.animationHorizontalScrollContainer(element);\n\t\t} else if (element.dataset.scroll === 'js-horizontal-scroll-section') {\n\t\t\tthis.animationHorizontalScrollSection(element);\n\t\t} else if (element.dataset.scroll === 'js-comparison') {\n\t\t\tthis.animationComparison(element);\n\t\t} else if (element.dataset.scroll === 'js-parallax') {\n\t\t\tthis.animationParallax(element);\n\t\t} else if (element.dataset.scroll === 'js-video') {\n\t\t\tthis.animationVideo(element);\n\t\t} else {\n\t\t\tthis.animationDefault(element);\n\t\t}\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\t// ScrollTrigger.defaults({\n\t\t// \tmarkers: false,\n\t\t// \tease: 'power3',\n\t\t// })\n\n\t\tgsap.utils.toArray(triggers).forEach((element) => {\n\t\t\tthis.getAnimation(element);\n\t\t});\n\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\t// console.log(target.dataset.scroll);\n\n\t\tsetTimeout(() => {\n\n\t\t\tthis.getAnimation(target);\n\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * default Animation\n\t */\n\tanimationDefault(item) {\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n\n\t/**\n\t * splitText Animation\n\t */\n\tanimationSplitText(item) {\n\t\tgsap.set(item, { autoAlpha: 1 });\n\t\tconst targetSplitBy = item.dataset.scrollSplittext;\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tstart: 'top 90%',\n\t\t\t\tend: 'bottom 60%',\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\t// markers: true,\n\t\t\t\ttoggleActions: 'play none play reset'\n\t\t\t}\n\t\t});\n\n\t\tif (targetSplitBy === 'chars') {\n\t\t\tconst itemSplitted = new SplitText(item, { type: 'chars' });\n\t\t\ttl.from(itemSplitted.chars, {\n\t\t\t\tyPercent: 100,\n\t\t\t\topacity: 0,\n\t\t\t\tstagger: 0.05,\n\t\t\t\tduration: 0.5,\n\t\t\t\tease: 'back.inOut'\n\t\t\t});\n\t\t}\n\n\t\tif (targetSplitBy === 'words') {\n\t\t\tconst itemSplitted = new SplitText(item, { type: 'words' });\n\t\t\ttl.from(itemSplitted.words, {\n\t\t\t\tyPercent: 100,\n\t\t\t\topacity: 0,\n\t\t\t\tstagger: 0.05,\n\t\t\t\tduration: 0.5,\n\t\t\t\tease: 'back.inOut'\n\t\t\t});\n\t\t}\n\n\t\tif (targetSplitBy === 'lines') {\n\t\t\tconst itemSplitted = new SplitText(item, { type: 'lines' });\n\t\t\ttl.from(itemSplitted.lines, { y: 20, opacity: 0, stagger: 0.01, duration: 0.01, ease: 'back.inOut' });\n\t\t}\n\t}\n\n\t/**\n\t * rotation Animation\n\t */\n\tanimationRotation(item) {\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tstart: 'top 90%',\n\t\t\t\tend: 'bottom 80%',\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\ttoggleActions: 'play none play reverse'\n\t\t\t}\n\t\t});\n\n\t\ttl.from(item, {\n\t\t\tx: 400,\n\t\t\trotation: 360\n\t\t});\n\t}\n\n\t/**\n\t * batch Animation\n\t */\n\tanimationBatch(item) {\n\t\tconst target = item.querySelectorAll('[data-scroll-target]');\n\n\t\t// gsap.set(target, { y: 100, opacity: 0 });\n\n\t\tScrollTrigger.batch(target, {\n\t\t\tinterval: 0.1, // time window (in seconds) for batching to occur.\n\t\t\tbatchMax: 3, // maximum batch size (targets)\n\t\t\tonEnter: (batch) => gsap.to(batch, { autoAlpha: 1, stagger: 0.1, overwrite: true }),\n\t\t\tonLeave: (batch) => gsap.set(batch, { autoAlpha: 0, overwrite: true }),\n\t\t\tonEnterBack: (batch) => gsap.to(batch, { autoAlpha: 1, stagger: 0.1, overwrite: true }),\n\t\t\tonLeaveBack: (batch) => gsap.set(batch, { autoAlpha: 0, overwrite: true })\n\t\t});\n\n\t\t// ScrollTrigger.addEventListener('refreshInit', () =>\n\t\t// \tgsap.set(target, { y: 0 })\n\t\t// )\n\t}\n\n\t/**\n\t * scale Animation\n\t */\n\tanimationScale(item) {\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tstart: 'top 100%',\n\t\t\t\tend: 'bottom 0%',\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\ttoggleActions: 'play none play reverse'\n\t\t\t}\n\t\t});\n\n\t\ttl.to(item, {\n\t\t\tscale: 1.5\n\t\t});\n\t}\n\n\t/**\n\t * parallax Animation\n\t */\n\tanimationParallax(item) {\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\ttoggleActions: 'play pause none none',\n\t\t\t\tscrub: targetScrub || 2\n\t\t\t}\n\t\t});\n\n\t\ttl.to(item, {\n\t\t\ty: -item.dataset.scrollSpeedY * 100 || 0,\n\t\t\tx: -item.dataset.scrollSpeedX * 100 || 0\n\t\t});\n\t}\n\n\t/**\n\t * video Animation\n\t */\n\tanimationVideo(item) {\n\t\tconst targetVideo = item.querySelector('[data-scroll-target]');\n\n\t\tgsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tstart: 'top bottom',\n\t\t\t\tend: 'bottom top',\n\t\t\t\tmarkers: false,\n\t\t\t\tonEnter: () => targetVideo.play(),\n\t\t\t\tonLeave: () => {\n\t\t\t\t\ttargetVideo.pause();\n\t\t\t\t\ttargetVideo.currentTime = 0;\n\t\t\t\t},\n\t\t\t\tonEnterBack: () => targetVideo.play(),\n\t\t\t\tonLeaveBack: () => {\n\t\t\t\t\ttargetVideo.pause();\n\t\t\t\t\ttargetVideo.currentTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * darwSvg Animation\n\t */\n\tanimationDraw(item) {\n\t\tconst target = item.querySelectorAll('path');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\ttoggleActions: 'play none none none'\n\t\t\t}\n\t\t});\n\n\t\ttl.from(target, {\n\t\t\tdrawSVG: 0\n\t\t});\n\t}\n\n\t/**\n\t * backgroundColor Animation\n\t */\n\tanimationChangeBgColor(item) {\n\t\tconst target = document.body;\n\t\tconst targetColor = item.dataset.scrollBgcolor;\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tscrub: 1,\n\t\t\t\ttoggleActions: 'play reset play reset'\n\t\t\t}\n\t\t});\n\n\t\ttl.to(target, {\n\t\t\tbackgroundColor: targetColor,\n\t\t\tease: 'power1'\n\t\t});\n\t}\n\n\t/**\n\t * pin Animation\n\t */\n\tanimationPin(item) {\n\t\tconst target = item.querySelectorAll('[data-scroll-target]');\n\t\tconst targetElement = item.querySelectorAll('[data-scroll-target-animate]');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tstart: 'center center',\n\t\t\t\t// end: '+=200%',\n\t\t\t\t// toggleClass: 'active',\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tpin: true,\n\t\t\t}\n\t\t});\n\n\t\ttl.from(targetElement, {\n\t\t\tscale: 0.6,\n\t\t\ttransformOrigin: 'center center'\n\t\t});\n\t}\n\n\t/**\n\t * pin Image Sequence https://codepen.io/GreenSock/pen/yLOVJxd\n\t */\n\tanimationSpriteImages(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst canvas = item.querySelector('[data-scroll-canvas]');\n\t\tconst targetContainer = item.querySelector('[data-scroll-target-animate]');\n\t\tconst context = canvas.getContext('2d');\n\t\tconst frameCount = parseInt(item.dataset.scrollFrames, 10);\n\t\tconst framePath = item.dataset.scrollPath;\n\n\t\tcanvas.width = 900;\n\t\tcanvas.height = 859;\n\n\t\tconst currentFrame = (index) => `${framePath}/${(index + 1).toString().padStart(4, '0')}.jpg`;\n\t\t// `https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/${(index + 1).toString().padStart(4, '0')}.jpg`\n\n\t\tconst images = [];\n\t\tconst frames = {\n\t\t\tframe: 0\n\t\t};\n\n\t\tfor (let i = 0; i < frameCount; i++) {\n\t\t\tconst img = new Image();\n\t\t\timg.src = currentFrame(i);\n\t\t\timages.push(img);\n\t\t}\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: '+=400%',\n\t\t\t\tscrub: 0.5,\n\t\t\t\tpin: true,\n\t\t\t}\n\t\t});\n\n\t\ttl.to(\n\t\t\tframes,\n\t\t\t{\n\t\t\t\tframe: frameCount - 1,\n\t\t\t\tsnap: 'frame',\n\t\t\t\tonUpdate: render,\n\t\t\t\tduration: 20\n\t\t\t},\n\t\t\t'together'\n\t\t).fromTo(targetContainer, { scale: 0.95 }, { scale: 1, duration: 20 }, 'together');\n\n\t\timages[0].onload = render;\n\n\t\tfunction render() {\n\t\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\tcontext.drawImage(images[frames.frame], 0, 0);\n\t\t}\n\t}\n\n\t/**\n\t * pin Horizontal Animation\n\t */\n\tanimationHorizontalScroll(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst targetContainer = item.querySelector('[data-scroll-target-animate]');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tgsap.to(targetContainer, {\n\t\t\tx: () => -targetContainer.getBoundingClientRect().width + target.getBoundingClientRect().width,\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tinvalidateOnRefresh: true,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => '+=' + targetContainer.offsetWidth,\n\t\t\t\tpin: true,\n\t\t\t\tscrub: targetScrub || false\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * pin Horizontal Container Animation\n\t */\n\tanimationHorizontalScrollContainer(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst panel = item.querySelectorAll('[data-scroll-panel]');\n\t\tconst targetScrub = item.dataset.scrollScrub;\n\n\t\tlet sections = gsap.utils.toArray(panel);\n\n\t\tlet scrollTween = gsap.to(sections, {\n\t\t\txPercent: -100 * (sections.length - 1),\n\t\t\tease: 'none', // <-- IMPORTANT!\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tpin: true,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\t//snap: directionalSnap(1 / (sections.length - 1)),\n\t\t\t\tend: '+=3000'\n\t\t\t}\n\t\t});\n\n\t\tgsap.to('.js-box-1', {\n\t\t\ty: -130,\n\t\t\tduration: 2,\n\t\t\tease: 'elastic',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: '.js-box-1',\n\t\t\t\tcontainerAnimation: scrollTween,\n\t\t\t\tstart: 'left center',\n\t\t\t\ttoggleActions: 'play none play reverse'\n\t\t\t\t// markers: true,\n\t\t\t}\n\t\t});\n\n\t\tgsap.to('.js-box-2', {\n\t\t\ty: 320,\n\t\t\tbackgroundColor: 'red',\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: '.js-box-2',\n\t\t\t\tcontainerAnimation: scrollTween,\n\t\t\t\tstart: 'center 80%',\n\t\t\t\tend: 'center 20%',\n\t\t\t\tscrub: 2\n\t\t\t\t// markers: true\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * pin Horizontal Section Animation\n\t */\n\tanimationHorizontalScrollSection(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst section = item.querySelectorAll('[data-scroll-section]');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst sections = gsap.utils.toArray(section);\n\n\t\tlet maxWidth = 0;\n\n\t\tconst getMaxWidth = () => {\n\t\t\tmaxWidth = 0;\n\t\t\tsections.forEach((section) => {\n\t\t\t\tmaxWidth += section.offsetWidth;\n\t\t\t});\n\t\t};\n\t\tgetMaxWidth();\n\t\tScrollTrigger.addEventListener('refreshInit', getMaxWidth);\n\n\t\tgsap.to(sections, {\n\t\t\tx: () => `-${maxWidth - window.innerWidth}`,\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tpin: true,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${maxWidth}`,\n\t\t\t\tinvalidateOnRefresh: true\n\t\t\t}\n\t\t});\n\n\t\t// ADD SKEW\n\t\t// let proxy = { skew: 0 },\n\t\t// \tskewSetter = gsap.quickSetter(section, 'skewX', 'deg'), // fast\n\t\t// \tclamp = gsap.utils.clamp(-10, 10) // don't let the skew go beyond [X] degrees.\n\t\t// END SKEW\n\n\t\tsections.forEach((sct, i) => {\n\t\t\tScrollTrigger.create({\n\t\t\t\ttrigger: sct,\n\t\t\t\tstart: () =>\n\t\t\t\t\t'top top-=' +\n\t\t\t\t\t(sct.offsetLeft - window.innerWidth / 2) * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\tend: () => '+=' + sct.offsetWidth * (maxWidth / (maxWidth - window.innerWidth)),\n\t\t\t\ttoggleClass: { targets: sct, className: 'active' }\n\t\t\t\t// ADD SKEW\n\t\t\t\t// onUpdate: (self) => {\n\t\t\t\t// \tlet skew = clamp(self.getVelocity() / -500)\n\t\t\t\t// \t// only do something if the skew is MORE severe. Remember, we're always tweening back to 0, so if the user slows their scrolling quickly, it's more natural to just let the tween handle that smoothly rather than jumping to the smaller skew.\n\t\t\t\t// \tif (Math.abs(skew) > Math.abs(proxy.skew)) {\n\t\t\t\t// \t\tproxy.skew = skew\n\t\t\t\t// \t\tgsap.to(proxy, {\n\t\t\t\t// \t\t\tskew: 0,\n\t\t\t\t// \t\t\tduration: 0.5,\n\t\t\t\t// \t\t\tease: 'circ',\n\t\t\t\t// \t\t\toverwrite: true,\n\t\t\t\t// \t\t\tonUpdate: () => skewSetter(proxy.skew),\n\t\t\t\t// \t\t})\n\t\t\t\t// \t}\n\t\t\t\t// },\n\t\t\t\t// END SKEW\n\t\t\t});\n\t\t});\n\n\t\t// SKEW: make the right edge \"stick\" to the scroll bar. force3D: true improves performance\n\t\t// gsap.set(section, { transformOrigin: 'center center', force3D: true })\n\t\t// END SKEW\n\t}\n\n\t/**\n\t * comparison Animation\n\t */\n\tanimationComparison(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst targetMedia = item.querySelectorAll('[data-scroll-target-media]');\n\t\tconst targetImage = item.querySelectorAll('[data-scroll-target-media] img');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => `+=${target.offsetWidth}`,\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\tpin: true,\n\t\t\t},\n\t\t\tdefaults: { ease: 'none' }\n\t\t});\n\n\t\ttl.fromTo(targetMedia, { xPercent: 100, x: 0 }, { xPercent: 0 }).fromTo(\n\t\t\ttargetImage,\n\t\t\t{ xPercent: -100, x: 0 },\n\t\t\t{ xPercent: 0 },\n\t\t\t0\n\t\t);\n\t}\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["initObserver","deepmerge","gsap","MorphSVGPlugin","DrawSVGPlugin","SplitText","ScrollTrigger","registerPlugin","AnimationsAll","element","options","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","window","addEventListener","init","initEvents","querySelectorAll","console","log","dataset","scroll","animationSplitText","animationRotation","animationBatch","animationScale","animationDraw","animationChangeBgColor","animationPin","animationSpriteImages","animationHorizontalScroll","animationHorizontalScrollContainer","animationHorizontalScrollSection","animationComparison","animationParallax","animationVideo","animationDefault","utils","toArray","forEach","getAnimation","target","setTimeout","item","targetClass","create","trigger","start","toggleClass","toggleActions","set","autoAlpha","targetSplitBy","scrollSplittext","targetScrub","parseInt","scrollScrub","tl","timeline","scrollTrigger","end","scrub","itemSplitted","type","from","chars","yPercent","opacity","stagger","duration","ease","words","lines","y","x","rotation","batch","interval","batchMax","onEnter","to","overwrite","onLeave","onEnterBack","onLeaveBack","scale","scrollSpeedY","scrollSpeedX","targetVideo","querySelector","markers","play","pause","currentTime","drawSVG","targetColor","scrollBgcolor","backgroundColor","targetElement","pin","transformOrigin","canvas","targetContainer","context","getContext","frameCount","scrollFrames","framePath","scrollPath","width","height","currentFrame","index","toString","padStart","images","frames","frame","i","img","Image","src","push","snap","onUpdate","render","fromTo","onload","clearRect","drawImage","getBoundingClientRect","invalidateOnRefresh","offsetWidth","panel","sections","scrollTween","xPercent","length","containerAnimation","section","maxWidth","getMaxWidth","innerWidth","sct","offsetLeft","targets","className","targetMedia","targetImage","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","entry","observerCallback","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
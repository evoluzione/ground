{"version":3,"file":"animationAll.bundle.js","mappings":"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","sources":["webpack://ground/./js/animations/animationAll.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationsAll {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-scroll]';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\twindow.addEventListener('DOMContentLoaded', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\tScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\tScrollTrigger.addEventListener('refresh', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_OUT', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('NAVIGATE_IN', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_END', () => {});\n\n\t\t// window.addEventListener('LOADER_COMPLETE', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\t// TODO: js pin non funziona\n\t\tgsap.utils.toArray(triggers).forEach((element) => {\n\t\t\t \n\t\t\t// else {\n\t\t\t// \tthis.animationDefault(element);\n\t\t\t// }\n\t\t});\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\n\t\tsetTimeout(() => {\n\t\t\t\n\t\t\t// else {\n\t\t\t// \tthis.animationDefault(target);\n\t\t\t// }\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * default Animation\n\t */\n\tanimationDefault(item) {\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n\n\n\t/**\n\t * video Animation\n\t */\n\tanimationVideo(item) {\n\t\tconst targetVideo = item.querySelector('[data-scroll-target]');\n\n\t\tgsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tstart: 'top bottom',\n\t\t\t\tend: 'bottom top',\n\t\t\t\tmarkers: false,\n\t\t\t\tonEnter: () => targetVideo.play(),\n\t\t\t\tonLeave: () => {\n\t\t\t\t\ttargetVideo.pause();\n\t\t\t\t\ttargetVideo.currentTime = 0;\n\t\t\t\t},\n\t\t\t\tonEnterBack: () => targetVideo.play(),\n\t\t\t\tonLeaveBack: () => {\n\t\t\t\t\ttargetVideo.pause();\n\t\t\t\t\ttargetVideo.currentTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["initObserver","deepmerge","gsap","ScrollTrigger","registerPlugin","AnimationsAll","element","options","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","window","addEventListener","init","initEvents","querySelectorAll","utils","toArray","forEach","target","setTimeout","item","targetClass","dataset","scroll","create","trigger","start","toggleClass","toggleActions","targetVideo","querySelector","timeline","scrollTrigger","end","markers","onEnter","play","onLeave","pause","currentTime","onEnterBack","onLeaveBack","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","entry","observerCallback","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
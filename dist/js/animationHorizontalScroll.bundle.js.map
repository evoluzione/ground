{"version":3,"file":"animationHorizontalScroll.bundle.js","mappings":"sWAOAA,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAECC,EAAAA,WAKpB,WAAYC,EAASC,I,4FAAS,SAC7BC,KAAKF,QAAUA,EACfE,KAAKC,SAAW,CACfC,SAAUF,KAAKF,SAEhBE,KAAKG,IAAM,CACVC,KAAMC,SAASC,gBACfC,KAAMF,SAASE,MAEhBP,KAAKD,QAAUA,EAAUS,GAAAA,CAAUR,KAAKC,SAAUF,GAAWC,KAAKC,SA4BlED,KAAKS,OACLT,KAAKU,WAAWV,KAAKD,QAAQG,U,yCAQ9B,WACCF,KAAKG,IAAIL,QAAUE,KAAKF,U,wBAOzB,SAAWI,GACVF,KAAKW,cAAcT,K,0BAcpB,SAAaU,GAAQ,WACpBZ,KAAKS,OACLI,YAAW,WACV,EAAKF,cAAcC,KACjB,O,2BAOJ,SAAcE,GAEb,IAAMC,EAAcD,EAAKE,QAAQC,OAEjCrB,EAAAA,EAAAA,OAAqB,CACpBsB,QAASJ,EACTK,MAAO,WACPC,YAAaL,EACbM,cAAe,6B,sEA7FGxB,I,o/BCJrBF,EAAAA,GAAAA,eAAoBC,EAAAA,G,IAEC0B,EAAAA,SAAAA,I,urBAEpB,WAAYxB,EAASC,GAAS,a,4FAAA,UAC7B,cAAMD,EAASC,IACVD,QAAUA,GAAW,uCAFG,E,0CAK9B,SAAcgB,GACb,IAAMF,EAASE,EAAKS,cAAc,wBAC5BC,EAAkBV,EAAKS,cAAc,gCACrCE,EAAcC,SAASZ,EAAKE,QAAQW,YAAa,IAEvDhC,EAAAA,GAAAA,GAAQ6B,EAAiB,CACxBI,EAAG,kBAAOJ,EAAgBK,wBAAwBC,MAAQlB,EAAOiB,wBAAwBC,OACzFC,KAAM,OACNC,cAAe,CACdd,QAASN,EACTqB,qBAAqB,EACrBd,MAAO,gBACPe,IAAK,iBAAM,KAAOV,EAAgBW,aAClCC,KAAK,EACLC,MAAOZ,IAAe,U,sEArBLH,CAAkCzB,EAAAA","sources":["webpack://ground/./js/animations/animationDefault.js","webpack://ground/./js/animations/animationHorizontalScroll.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// import { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationDefault {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element;\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\t// this.updateEvents = this.updateEvents.bind(this);\n\n\t\t// window.addEventListener('DOMContentLoaded', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\t// ScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\t// ScrollTrigger.addEventListener('refresh', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_OUT', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('resize', () => {\n\t\t// \t// ScrollTrigger.update();\n\t\t// \t// ScrollTrigger.refresh();\n\t\t// });\n\n\t\t// window.addEventListener('NAVIGATE_IN', () => {});\n\n\t\t// window.addEventListener('NAVIGATE_END', () => {});\n\n\t\t//  window.addEventListener('LOADER_COMPLETE', () => {\n\t\tthis.init();\n\t\tthis.initEvents(this.options.triggers);\n\t\t// initObserver(this.options.triggers, this.updateEvents);\n\t\t//  });\t\t\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = this.element;\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\tthis.fireAnimation(triggers);\n\n\t\t// gsap.utils.toArray(triggers).forEach((element) => {\n\t\t// \tif (element.dataset.scroll === 'js-split-text') {\n\t\t// \t}  else {\n\t\t// \t\tthis.animationDefault(target);\n\t\t// \t}\n\t\t// });\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\tsetTimeout(() => {\n\t\t\tthis.fireAnimation(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Fire the animation\n\t * @param {node} item \n\t */\n\tfireAnimation(item) {\n\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n}\n","/* eslint-disable no-unused-vars */\nimport AnimationDefault from './animationDefault';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class AnimationHorizontalScroll extends AnimationDefault {\n\t\n\tconstructor(element, options) {\n\t\tsuper(element, options);\n\t\tthis.element = element || '[data-scroll=\"js-horizontal-scroll\"]';\n\t}\n\n\tfireAnimation(item) {\n\t\tconst target = item.querySelector('[data-scroll-target]');\n\t\tconst targetContainer = item.querySelector('[data-scroll-target-animate]');\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tgsap.to(targetContainer, {\n\t\t\tx: () => -targetContainer.getBoundingClientRect().width + target.getBoundingClientRect().width,\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: target,\n\t\t\t\tinvalidateOnRefresh: true,\n\t\t\t\tstart: 'center center',\n\t\t\t\tend: () => '+=' + targetContainer.offsetWidth,\n\t\t\t\tpin: true,\n\t\t\t\tscrub: targetScrub || false\n\t\t\t}\n\t\t});\n\t}\n\n}\n"],"names":["gsap","ScrollTrigger","AnimationDefault","element","options","this","defaults","triggers","DOM","html","document","documentElement","body","deepmerge","init","initEvents","fireAnimation","target","setTimeout","item","targetClass","dataset","scroll","trigger","start","toggleClass","toggleActions","AnimationHorizontalScroll","querySelector","targetContainer","targetScrub","parseInt","scrollScrub","x","getBoundingClientRect","width","ease","scrollTrigger","invalidateOnRefresh","end","offsetWidth","pin","scrub"],"sourceRoot":""}
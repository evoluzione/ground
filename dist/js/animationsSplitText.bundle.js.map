{"version":3,"file":"animationsSplitText.bundle.js","mappings":"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","sources":["webpack://ground/./js/animations/animationSplitText.js","webpack://ground/./js/utilities/observer.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { initObserver } from '../utilities/observer';\n// import { getTemplateUrl } from '../utilities/paths';\nimport deepmerge from 'deepmerge';\nimport { gsap } from 'gsap';\nimport { SplitText, ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger, SplitText);\n\nexport default class AnimationSplittext {\n\t/**\n\t * @param {string} element - Selector\n\t * @param {Object} options - User options\n\t */\n\tconstructor(element, options) {\n\t\tthis.element = element || '[data-scroll=\"js-split-text\"]';\n\t\tthis.defaults = {\n\t\t\ttriggers: this.element\n\t\t};\n\t\tthis.DOM = {\n\t\t\thtml: document.documentElement,\n\t\t\tbody: document.body\n\t\t};\n\t\tthis.options = options ? deepmerge(this.defaults, options) : this.defaults;\n\t\tthis.updateEvents = this.updateEvents.bind(this);\n\n\t\twindow.addEventListener('DOMContentLoaded', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollStart', () => {});\n\n\t\tScrollTrigger.addEventListener('scrollEnd', () => {});\n\n\t\tScrollTrigger.addEventListener('refreshInit', () => {});\n\n\t\tScrollTrigger.addEventListener('refresh', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_OUT', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\t// ScrollTrigger.update();\n\t\t\t// ScrollTrigger.refresh();\n\t\t});\n\n\t\twindow.addEventListener('NAVIGATE_IN', () => {});\n\n\t\twindow.addEventListener('NAVIGATE_END', () => {});\n\n\t\t// window.addEventListener('LOADER_COMPLETE', () => {\n\t\t\tthis.init();\n\t\t\tthis.initEvents(this.options.triggers);\n\t\t\tinitObserver(this.options.triggers, this.updateEvents);\n\t\t// });\n\t}\n\n\t/**\n\t * Init\n\t */\n\tinit() {\n\t\tthis.DOM.element = document.querySelectorAll(this.element);\n\t}\n\n\t/**\n\t * Initialize events\n\t * @param {string} triggers - Selectors\n\t */\n\tinitEvents(triggers) {\n\t\t// ScrollTrigger.defaults({\n\t\t// \tmarkers: false,\n\t\t// \tease: 'power3',\n\t\t// })\n\n\t\tgsap.utils.toArray(triggers).forEach((element) => {\n\t\t\tthis.animationSplitText(element);\n\t\t});\n\t}\n\n\t/**\n\t * Update events\n\t * @param {Object} target - New selector\n\t */\n\tupdateEvents(target) {\n\t\tthis.init();\n\t\tsetTimeout(() => {\n\t\t\tthis.animationSplitText(target);\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * default Animation\n\t */\n\tanimationDefault(item) {\n\t\tconst targetClass = item.dataset.scroll;\n\n\t\tScrollTrigger.create({\n\t\t\ttrigger: item,\n\t\t\tstart: 'top 100%',\n\t\t\ttoggleClass: targetClass,\n\t\t\ttoggleActions: 'play none none none'\n\t\t\t// markers: true,\n\t\t\t// once: true,\n\t\t});\n\t}\n\n\t/**\n\t * splitText Animation\n\t */\n\tanimationSplitText(item) {\n\t\tgsap.set(item, { autoAlpha: 1 });\n\t\tconst targetSplitBy = item.dataset.scrollSplittext;\n\t\tconst targetScrub = parseInt(item.dataset.scrollScrub, 10);\n\n\t\tconst tl = gsap.timeline({\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: item,\n\t\t\t\tstart: 'top 90%',\n\t\t\t\tend: 'bottom 60%',\n\t\t\t\tscrub: targetScrub || false,\n\t\t\t\t// markers: true,\n\t\t\t\ttoggleActions: 'play none play reset'\n\t\t\t}\n\t\t});\n\n\t\tif (targetSplitBy === 'chars') {\n\t\t\tconst itemSplitted = new SplitText(item, { type: 'chars' });\n\t\t\ttl.from(itemSplitted.chars, {\n\t\t\t\tyPercent: 100,\n\t\t\t\topacity: 0,\n\t\t\t\tstagger: 0.05,\n\t\t\t\tduration: 0.5,\n\t\t\t\tease: 'back.inOut'\n\t\t\t});\n\t\t}\n\n\t\tif (targetSplitBy === 'words') {\n\t\t\tconst itemSplitted = new SplitText(item, { type: 'words' });\n\t\t\ttl.from(itemSplitted.words, {\n\t\t\t\tyPercent: 100,\n\t\t\t\topacity: 0,\n\t\t\t\tstagger: 0.05,\n\t\t\t\tduration: 0.5,\n\t\t\t\tease: 'back.inOut'\n\t\t\t});\n\t\t}\n\n\t\tif (targetSplitBy === 'lines') {\n\t\t\tconst itemSplitted = new SplitText(item, { type: 'lines' });\n\t\t\ttl.from(itemSplitted.lines, { y: 20, opacity: 0, stagger: 0.01, duration: 0.01, ease: 'back.inOut' });\n\t\t}\n\t}\n}\n","/**\n * Observe DOM Node Changes\n * @param {string} triggers - Selectors\n * @param {requestCallback} cb - The callback that handles the response.\n *\n * @see https://stackoverflow.com/questions/56608748/how-to-use-queryselectorall-on-the-added-nodes-in-a-mutationobserver\n */\nexport function initObserver(triggers, callback) {\n\tconst filterSelector = (selector, mutationsList) => {\n\t\t// We can't create a NodeList; let's use a Set\n\t\tconst result = new Set();\n\t\t// Loop through the mutationsList...\n\t\tfor (const { addedNodes } of mutationsList) {\n\t\t\tfor (const node of addedNodes) {\n\t\t\t\t// console.log(node);\n\n\t\t\t\t// If it's an element...\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\t// Add it if it's a match\n\t\t\t\t\tif (node.matches(selector)) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tfor (const entry of node.querySelectorAll(selector)) {\n\t\t\t\t\t\tresult.add(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* mutationsList.map((e) => e.addedNodes).forEach((n) => {\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.matches(selector)) {\n\t\t\t\t\t\tresult.add(n);\n\t\t\t\t\t}\n\t\t\t\t\t// Add any children\n\t\t\t\t\tn.querySelectorAll(selector).forEach((c) => result.add(c));\n\t\t\t\t}\n\t\t\t}); */\n\n\t\treturn [...result]; // Result is an array, or just return the set\n\t};\n\n\tconst observerCallback = (mutationsList) => {\n\t\tconst result = filterSelector(triggers, mutationsList);\n\t\tresult.forEach((element) => {\n\t\t\tcallback(element);\n\t\t});\n\t};\n\n\tconst config = {\n\t\tchildList: true,\n\t\tattributes: false,\n\t\tcharacterData: false,\n\t\tsubtree: true\n\t};\n\tconst observer = new MutationObserver(observerCallback);\n\tobserver.observe(document.documentElement, config);\n\t//observer.disconnect();\n}\n"],"names":["initObserver","deepmerge","gsap","SplitText","ScrollTrigger","registerPlugin","AnimationSplittext","element","options","defaults","triggers","DOM","html","document","documentElement","body","updateEvents","bind","window","addEventListener","init","initEvents","querySelectorAll","utils","toArray","forEach","animationSplitText","target","setTimeout","item","targetClass","dataset","scroll","create","trigger","start","toggleClass","toggleActions","set","autoAlpha","targetSplitBy","scrollSplittext","targetScrub","parseInt","scrollScrub","tl","timeline","scrollTrigger","end","scrub","itemSplitted","type","from","chars","yPercent","opacity","stagger","duration","ease","words","lines","y","callback","filterSelector","selector","mutationsList","result","Set","addedNodes","node","nodeType","matches","add","entry","observerCallback","config","childList","attributes","characterData","subtree","observer","MutationObserver","observe"],"sourceRoot":""}
// Colors
$color-primary: #7a92ba;
$color-secondary: #61697d;
$color-black: #000000;
$color-grey: #cbcbcb;
$color-white: #ffffff;
$color-success: #a2bf8a;
$color-warning: #eccc87;
$color-error: #c16069;

$color-primary-lightest: lighten($color-primary, 80%);
$color-primary-lighter: lighten($color-primary, 50%);
$color-primary-light: lighten($color-primary, 20%);
$color-primary-dark: darken($color-primary, 20%);
$color-primary-darker: darken($color-primary, 50%);
$color-primary-darkest: darken($color-primary, 80%);

$color-secondary-lightest: lighten($color-secondary, 80%);
$color-secondary-lighter: lighten($color-secondary, 50%);
$color-secondary-light: lighten($color-secondary, 20%);
$color-secondary-dark: darken($color-secondary, 20%);
$color-secondary-darker: darken($color-secondary, 50%);
$color-secondary-darkest: darken($color-secondary, 80%);

$color-grey-lightest: lighten($color-grey, 80%);
$color-grey-lighter: lighten($color-grey, 50%);
$color-grey-light: lighten($color-grey, 20%);
$color-grey-dark: darken($color-grey, 20%);
$color-grey-darker: darken($color-grey, 50%);
$color-grey-darkest: darken($color-grey, 80%);

$color-warning-lightest: lighten($color-warning, 80%);
$color-warning-lighter: lighten($color-warning, 50%);
$color-warning-light: lighten($color-warning, 20%);
$color-warning-dark: darken($color-warning, 20%);
$color-warning-darker: darken($color-warning, 50%);
$color-warning-darkest: darken($color-warning, 80%);

$color-success-lightest: lighten($color-success, 80%);
$color-success-lighter: lighten($color-success, 50%);
$color-success-light: lighten($color-success, 20%);
$color-success-dark: darken($color-success, 20%);
$color-success-darker: darken($color-success, 50%);
$color-success-darkest: darken($color-success, 80%);

$color-error-lightest: lighten($color-error, 80%);
$color-error-lighter: lighten($color-error, 50%);
$color-error-light: lighten($color-error, 20%);
$color-error-dark: darken($color-error, 20%);
$color-error-darker: darken($color-error, 50%);
$color-error-darkest: darken($color-error, 80%);

// Breakpoints
$breakpoints: (
	default: 0px,
	xs: 480px,
	sm: 768px,
	md: 992px,
	lg: 1200px,
	xl: 1440px
);

// Font stacks
$font-primary: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
$font-secondary: Georgia, Times, Times New Roman, serif;
$font-monospace: 'Andale Mono', AndaleMono, monospace;

// Typography
$base-font-size: 16px;
$base-line-unit: 24px;
$base-line-multi: 1;
$rem-with-px-fallback: false;
$ritmo-unit: 'rem';

@include ritmo-baseline;

$type-styles: (
	default:
		(
			h1: ('font-size': 24px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h2: ('font-size': 20px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h3: ('font-size': 19px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h4: ('font-size': 18px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h5: ('font-size': 17px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h6: ('font-size': 16px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			p: ('font-size': 16px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			small: ('font-size': 12px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0)
		),
	md:
		(
			h1: ('font-size': 48px, 'line-height': 2, 'margin-bottom': 1, 'margin-top': 0),
			h2: ('font-size': 40px, 'line-height': 2, 'margin-bottom': 1, 'margin-top': 0),
			h3: ('font-size': 31px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h4: ('font-size': 26px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h5: ('font-size': 22px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			h6: ('font-size': 18px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			p: ('font-size': 16px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0),
			small: ('font-size': 12px, 'line-height': 1, 'margin-bottom': 1, 'margin-top': 0)
		)
);

// Grid
@include gridle_setup((
	context: 12,
	gutter-width: 24px,
	states-classes: false,
	classes: true
));

@each $key, $value in $breakpoints {
	@if $key != 'default' {
		@include gridle_register_state(
			$key, ( min-width: $value )
		);
	}
}

// @include gridle_register_clear_each( 4 , left );

@include gridle_generate_classes();

// Paths
$path-img: '../img/';
$path-fonts: '../fonts/';

// Debug
$debug-breakpoints: false;
$debug-rhythm: true;
$debug-css: false;
